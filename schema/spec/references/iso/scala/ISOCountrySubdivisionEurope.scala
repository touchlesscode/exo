/*
 * Copyright 2017 Vitor S. Vieira
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.vitorsvieira.iso

/**
 * ISO 3166-2 is part of the ISO 3166 standard
 * and defines codes for identifying the principal subdivisions
 * (e.g., provinces or states) of all countries coded in ISO 3166-1.
 * The official name of the standard is
 * "Codes for the representation of names of countries and their subdivisions â€“ Part 2: Country subdivision code."
 */
trait ISOCountrySubdivisionEurope extends CountrySubdivision {
  // format: OFF
  val `Andorra la Vella`                           = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Andorra la Vella", "AD-07")
  val `Canillo`                                    = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Canillo", "AD-02")
  val `Encamp`                                     = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Encamp", "AD-03")
  val `Escaldes-Engordany`                         = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Escaldes-Engordany", "AD-08")
  val `La Massana`                                 = new ISOCountrySubdivision(ISOCountry.ANDORRA, "La Massana", "AD-04")
  val `Ordino`                                     = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Ordino", "AD-05")
  val `Sant Julia de Loria`                        = new ISOCountrySubdivision(ISOCountry.ANDORRA, "Sant Julia de Loria", "AD-06")
  val `Burgenland`                                 = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Burgenland", "AT-1")
  val `Karnten`                                    = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Karnten", "AT-2")
  val `Niederosterreich`                           = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Niederosterreich", "AT-3")
  val `Oberosterreich`                             = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Oberosterreich", "AT-4")
  val `Salzburg`                                   = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Salzburg", "AT-5")
  val `Steiermark`                                 = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Steiermark", "AT-6")
  val `Tirol`                                      = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Tirol", "AT-7")
  val `Vorarlberg`                                 = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Vorarlberg", "AT-8")
  val `Wien`                                       = new ISOCountrySubdivision(ISOCountry.AUSTRIA, "Wien", "AT-9")
  val `Berat`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Berat", "AL-01")
  val `Diber`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Diber", "AL-09")
  val `Durres`                                     = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Durres", "AL-02")
  val `Elbasan`                                    = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Elbasan", "AL-03")
  val `Fier`                                       = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Fier", "AL-04")
  val `Gjirokaster`                                = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Gjirokaster", "AL-05")
  val `Korce`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Korce", "AL-06")
  val `Kukes`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Kukes", "AL-07")
  val `Lezhe`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Lezhe", "AL-08")
  val `Shkoder`                                    = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Shkoder", "AL-10")
  val `Tirane`                                     = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Tirane", "AL-11")
  val `Vlore`                                      = new ISOCountrySubdivision(ISOCountry.ALBANIA, "Vlore", "AL-12")
  val `Antwerpen`                                  = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Antwerpen", "BE-VAN")
  val `Brabant Wallon`                             = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Brabant Wallon", "BE-WBR")
  val `Brussels Hoofdstedelijk Gewest`             = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Brussels Hoofdstedelijk Gewest", "BE-BRU")
  val `Hainaut`                                    = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Hainaut", "BE-WHT")
  val `Liege`                                      = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Liege", "BE-WLG")
  val `Limburg - Belgium`                          = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Limburg", "BE-VLI")
  val `Luxembourg - Belgium`                       = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Luxembourg", "BE-WLX")
  val `Namur`                                      = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Namur", "BE-WNA")
  val `Oost-Vlaanderen`                            = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Oost-Vlaanderen", "BE-VOV")
  val `Vlaams-Brabant`                             = new ISOCountrySubdivision(ISOCountry.BELGIUM, "Vlaams-Brabant", "BE-VBR")
  val `West-Vlaanderen`                            = new ISOCountrySubdivision(ISOCountry.BELGIUM, "West-Vlaanderen", "BE-VWV")
  val `Blagoevgrad`                                = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Blagoevgrad", "BG-01")
  val `Burgas`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Burgas", "BG-02")
  val `Dobrich`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Dobrich", "BG-08")
  val `Gabrovo`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Gabrovo", "BG-07")
  val `Haskovo`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Haskovo", "BG-26")
  val `Kardzhali`                                  = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Kardzhali", "BG-09")
  val `Kyustendil`                                 = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Kyustendil", "BG-10")
  val `Lovech`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Lovech", "BG-11")
  val `Montana - Bulgaria`                         = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Montana", "BG-12")
  val `Pazardzhik`                                 = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Pazardzhik", "BG-13")
  val `Pernik`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Pernik", "BG-14")
  val `Pleven`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Pleven", "BG-15")
  val `Plovdiv`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Plovdiv", "BG-16")
  val `Razgrad`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Razgrad", "BG-17")
  val `Ruse - Bulgaria`                            = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Ruse", "BG-18")
  val `Shumen`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Shumen", "BG-27")
  val `Silistra`                                   = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Silistra", "BG-19")
  val `Sliven`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Sliven", "BG-20")
  val `Smolyan`                                    = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Smolyan", "BG-21")
  val `Sofia`                                      = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Sofia", "BG-23")
  val `Sofia (stolitsa)`                           = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Sofia (stolitsa)", "BG-22")
  val `Stara Zagora`                               = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Stara Zagora", "BG-24")
  val `Targovishte`                                = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Targovishte", "BG-25")
  val `Varna`                                      = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Varna", "BG-03")
  val `Veliko Tarnovo`                             = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Veliko Tarnovo", "BG-04")
  val `Vidin`                                      = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Vidin", "BG-05")
  val `Vratsa`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Vratsa", "BG-06")
  val `Yambol`                                     = new ISOCountrySubdivision(ISOCountry.BULGARIA, "Yambol", "BG-28")
  val `Federacija Bosna i Hercegovina`             = new ISOCountrySubdivision(ISOCountry.BOSNIA_AND_HERZEGOVINA, "Federacija Bosna i Hercegovina", "BA-BIH")
  val `Republika Srpska`                           = new ISOCountrySubdivision(ISOCountry.BOSNIA_AND_HERZEGOVINA, "Republika Srpska", "BA-SRP")
  val `Brestskaya Voblasts'`                       = new ISOCountrySubdivision(ISOCountry.BELARUS, "Brestskaya Voblasts'", "BY-BR")
  val `Homyel'skaya Voblasts'`                     = new ISOCountrySubdivision(ISOCountry.BELARUS, "Homyel'skaya Voblasts'", "BY-HO")
  val `Hrodzyenskaya Voblasts'`                    = new ISOCountrySubdivision(ISOCountry.BELARUS, "Hrodzyenskaya Voblasts'", "BY-HR")
  val `Mahilyowskaya Voblasts'`                    = new ISOCountrySubdivision(ISOCountry.BELARUS, "Mahilyowskaya Voblasts'", "BY-MA")
  val `Minskaya Voblasts'`                         = new ISOCountrySubdivision(ISOCountry.BELARUS, "Minskaya Voblasts'", "BY-MI")
  val `Vitsyebskaya Voblasts'`                     = new ISOCountrySubdivision(ISOCountry.BELARUS, "Vitsyebskaya Voblasts'", "BY-VI")
  val `Aargau`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Aargau", "CH-AG")
  val `Appenzell Ausserrhoden`                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Appenzell Ausserrhoden", "CH-AR")
  val `Appenzell Innerrhoden`                      = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Appenzell Innerrhoden", "CH-AI")
  val `Basel-Landschaft`                           = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Basel-Landschaft", "CH-BL")
  val `Basel-Stadt`                                = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Basel-Stadt", "CH-BS")
  val `Bern`                                       = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Bern", "CH-BE")
  val `Fribourg`                                   = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Fribourg", "CH-FR")
  val `Geneve`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Geneve", "CH-GE")
  val `Glarus`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Glarus", "CH-GL")
  val `Graubunden`                                 = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Graubunden", "CH-GR")
  val `Jura`                                       = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Jura", "CH-JU")
  val `Luzern`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Luzern", "CH-LU")
  val `Neuchatel`                                  = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Neuchatel", "CH-NE")
  val `Nidwalden`                                  = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Nidwalden", "CH-NW")
  val `Obwalden`                                   = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Obwalden", "CH-OW")
  val `Sankt Gallen`                               = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Sankt Gallen", "CH-SG")
  val `Schaffhausen`                               = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Schaffhausen", "CH-SH")
  val `Schwyz`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Schwyz", "CH-SZ")
  val `Solothurn`                                  = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Solothurn", "CH-SO")
  val `Thurgau`                                    = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Thurgau", "CH-TG")
  val `Ticino`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Ticino", "CH-TI")
  val `Uri`                                        = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Uri", "CH-UR")
  val `Valais`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Valais", "CH-VS")
  val `Vaud`                                       = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Vaud", "CH-VD")
  val `Zug`                                        = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Zug", "CH-ZG")
  val `Zurich`                                     = new ISOCountrySubdivision(ISOCountry.SWITZERLAND, "Zurich", "CH-ZH")
  val `Jihocesky kraj`                             = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Jihocesky kraj", "CZ-JC")
  val `Jihomoravsky kraj`                          = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Jihomoravsky kraj", "CZ-JM")
  val `Karlovarsky kraj`                           = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Karlovarsky kraj", "CZ-KA")
  val `Kralovehradecky kraj`                       = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Kralovehradecky kraj", "CZ-KR")
  val `Liberecky kraj`                             = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Liberecky kraj", "CZ-LI")
  val `Moravskoslezsky kraj`                       = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Moravskoslezsky kraj", "CZ-MO")
  val `Olomoucky kraj`                             = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Olomoucky kraj", "CZ-OL")
  val `Pardubicky kraj`                            = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Pardubicky kraj", "CZ-PA")
  val `Plzensky kraj`                              = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Plzensky kraj", "CZ-PL")
  val `Praha, hlavni mesto`                        = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Praha, hlavni mesto", "CZ-PR")
  val `Stredocesky kraj`                           = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Stredocesky kraj", "CZ-ST")
  val `Ustecky kraj`                               = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Ustecky kraj", "CZ-US")
  val `Vysocina kraj`                              = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Vysocina kraj", "CZ-VY")
  val `Zlinsky kraj`                               = new ISOCountrySubdivision(ISOCountry.CZECH_REPUBLIC, "Zlinsky kraj", "CZ-ZL")
  val `Baden-Wurttemberg`                          = new ISOCountrySubdivision(ISOCountry.GERMANY, "Baden-Wurttemberg", "DE-BW")
  val `Bayern`                                     = new ISOCountrySubdivision(ISOCountry.GERMANY, "Bayern", "DE-BY")
  val `Berlin`                                     = new ISOCountrySubdivision(ISOCountry.GERMANY, "Berlin", "DE-BE")
  val `Brandenburg`                                = new ISOCountrySubdivision(ISOCountry.GERMANY, "Brandenburg", "DE-BB")
  val `Bremen`                                     = new ISOCountrySubdivision(ISOCountry.GERMANY, "Bremen", "DE-HB")
  val `Hamburg`                                    = new ISOCountrySubdivision(ISOCountry.GERMANY, "Hamburg", "DE-HH")
  val `Hessen`                                     = new ISOCountrySubdivision(ISOCountry.GERMANY, "Hessen", "DE-HE")
  val `Mecklenburg-Vorpommern`                     = new ISOCountrySubdivision(ISOCountry.GERMANY, "Mecklenburg-Vorpommern", "DE-MV")
  val `Niedersachsen`                              = new ISOCountrySubdivision(ISOCountry.GERMANY, "Niedersachsen", "DE-NI")
  val `Nordrhein-Westfalen`                        = new ISOCountrySubdivision(ISOCountry.GERMANY, "Nordrhein-Westfalen", "DE-NW")
  val `Rheinland-Pfalz`                            = new ISOCountrySubdivision(ISOCountry.GERMANY, "Rheinland-Pfalz", "DE-RP")
  val `Saarland`                                   = new ISOCountrySubdivision(ISOCountry.GERMANY, "Saarland", "DE-SL")
  val `Sachsen`                                    = new ISOCountrySubdivision(ISOCountry.GERMANY, "Sachsen", "DE-SN")
  val `Sachsen-Anhalt`                             = new ISOCountrySubdivision(ISOCountry.GERMANY, "Sachsen-Anhalt", "DE-ST")
  val `Schleswig-Holstein`                         = new ISOCountrySubdivision(ISOCountry.GERMANY, "Schleswig-Holstein", "DE-SH")
  val `Thuringen`                                  = new ISOCountrySubdivision(ISOCountry.GERMANY, "Thuringen", "DE-TH")
  val `Hovedstaden`                                = new ISOCountrySubdivision(ISOCountry.DENMARK, "Hovedstaden", "DK-84")
  val `Midtjylland`                                = new ISOCountrySubdivision(ISOCountry.DENMARK, "Midtjylland", "DK-82")
  val `Nordjylland`                                = new ISOCountrySubdivision(ISOCountry.DENMARK, "Nordjylland", "DK-81")
  val `Sjelland`                                   = new ISOCountrySubdivision(ISOCountry.DENMARK, "Sjelland", "DK-85")
  val `Syddanmark`                                 = new ISOCountrySubdivision(ISOCountry.DENMARK, "Syddanmark", "DK-83")
  val `Harjumaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Harjumaa", "EE-37")
  val `Hiiumaa`                                    = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Hiiumaa", "EE-39")
  val `Ida-Virumaa`                                = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Ida-Virumaa", "EE-44")
  val `Jarvamaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Jarvamaa", "EE-51")
  val `Jogevamaa`                                  = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Jogevamaa", "EE-49")
  val `Laane-Virumaa`                              = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Laane-Virumaa", "EE-59")
  val `Laanemaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Laanemaa", "EE-57")
  val `Parnumaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Parnumaa", "EE-67")
  val `Polvamaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Polvamaa", "EE-65")
  val `Raplamaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Raplamaa", "EE-70")
  val `Saaremaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Saaremaa", "EE-74")
  val `Tartumaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Tartumaa", "EE-78")
  val `Valgamaa`                                   = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Valgamaa", "EE-82")
  val `Viljandimaa`                                = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Viljandimaa", "EE-84")
  val `Vorumaa`                                    = new ISOCountrySubdivision(ISOCountry.ESTONIA, "Vorumaa", "EE-86")
  val `Andalucia`                                  = new ISOCountrySubdivision(ISOCountry.SPAIN, "Andalucia", "ES-AN")
  val `Aragon`                                     = new ISOCountrySubdivision(ISOCountry.SPAIN, "Aragon", "ES-AR")
  val `Asturias, Principado de`                    = new ISOCountrySubdivision(ISOCountry.SPAIN, "Asturias, Principado de", "ES-AS")
  val `Canarias`                                   = new ISOCountrySubdivision(ISOCountry.SPAIN, "Canarias", "ES-CN")
  val `Cantabria`                                  = new ISOCountrySubdivision(ISOCountry.SPAIN, "Cantabria", "ES-CB")
  val `Castilla y Leon`                            = new ISOCountrySubdivision(ISOCountry.SPAIN, "Castilla y Leon", "ES-CL")
  val `Castilla-La Mancha`                         = new ISOCountrySubdivision(ISOCountry.SPAIN, "Castilla-La Mancha", "ES-CM")
  val `Catalunya`                                  = new ISOCountrySubdivision(ISOCountry.SPAIN, "Catalunya", "ES-CT")
  val `Ceuta`                                      = new ISOCountrySubdivision(ISOCountry.SPAIN, "Ceuta", "ES-CE")
  val `Extremadura`                                = new ISOCountrySubdivision(ISOCountry.SPAIN, "Extremadura", "ES-EX")
  val `Galicia`                                    = new ISOCountrySubdivision(ISOCountry.SPAIN, "Galicia", "ES-GA")
  val `Illes Balears`                              = new ISOCountrySubdivision(ISOCountry.SPAIN, "Illes Balears", "ES-IB")
  val `La Rioja`                                   = new ISOCountrySubdivision(ISOCountry.SPAIN, "La Rioja", "ES-LO")
  val `Madrid, Comunidad de`                       = new ISOCountrySubdivision(ISOCountry.SPAIN, "Madrid, Comunidad de", "ES-MD")
  val `Melilla`                                    = new ISOCountrySubdivision(ISOCountry.SPAIN, "Melilla", "ES-ML")
  val `Murcia, Region de`                          = new ISOCountrySubdivision(ISOCountry.SPAIN, "Murcia, Region de", "ES-MC")
  val `Navarra, Comunidad Foral de`                = new ISOCountrySubdivision(ISOCountry.SPAIN, "Navarra, Comunidad Foral de", "ES-NC")
  val `Pais Vasco`                                 = new ISOCountrySubdivision(ISOCountry.SPAIN, "Pais Vasco", "ES-PV")
  val `Valenciana, Comunidad`                      = new ISOCountrySubdivision(ISOCountry.SPAIN, "Valenciana, Comunidad", "ES-VC")
  val `Etela-Karjala`                              = new ISOCountrySubdivision(ISOCountry.FINLAND, "Etela-Karjala", "FI-02")
  val `Etela-Pohjanmaa`                            = new ISOCountrySubdivision(ISOCountry.FINLAND, "Etela-Pohjanmaa", "FI-03")
  val `Etela-Savo`                                 = new ISOCountrySubdivision(ISOCountry.FINLAND, "Etela-Savo", "FI-04")
  val `Kainuu`                                     = new ISOCountrySubdivision(ISOCountry.FINLAND, "Kainuu", "FI-05")
  val `Kanta-Hame`                                 = new ISOCountrySubdivision(ISOCountry.FINLAND, "Kanta-Hame", "FI-06")
  val `Keski-Pohjanmaa`                            = new ISOCountrySubdivision(ISOCountry.FINLAND, "Keski-Pohjanmaa", "FI-07")
  val `Keski-Suomi`                                = new ISOCountrySubdivision(ISOCountry.FINLAND, "Keski-Suomi", "FI-08")
  val `Kymenlaakso`                                = new ISOCountrySubdivision(ISOCountry.FINLAND, "Kymenlaakso", "FI-09")
  val `Lappi`                                      = new ISOCountrySubdivision(ISOCountry.FINLAND, "Lappi", "FI-10")
  val `Paijat-Hame`                                = new ISOCountrySubdivision(ISOCountry.FINLAND, "Paijat-Hame", "FI-16")
  val `Pirkanmaa`                                  = new ISOCountrySubdivision(ISOCountry.FINLAND, "Pirkanmaa", "FI-11")
  val `Pohjanmaa`                                  = new ISOCountrySubdivision(ISOCountry.FINLAND, "Pohjanmaa", "FI-12")
  val `Pohjois-Karjala`                            = new ISOCountrySubdivision(ISOCountry.FINLAND, "Pohjois-Karjala", "FI-13")
  val `Pohjois-Pohjanmaa`                          = new ISOCountrySubdivision(ISOCountry.FINLAND, "Pohjois-Pohjanmaa", "FI-14")
  val `Pohjois-Savo`                               = new ISOCountrySubdivision(ISOCountry.FINLAND, "Pohjois-Savo", "FI-15")
  val `Satakunta`                                  = new ISOCountrySubdivision(ISOCountry.FINLAND, "Satakunta", "FI-17")
  val `Uusimaa`                                    = new ISOCountrySubdivision(ISOCountry.FINLAND, "Uusimaa", "FI-18")
  val `Varsinais-Suomi`                            = new ISOCountrySubdivision(ISOCountry.FINLAND, "Varsinais-Suomi", "FI-19")
  val `Alsace`                                     = new ISOCountrySubdivision(ISOCountry.FRANCE, "Alsace", "FR-A")
  val `Aquitaine`                                  = new ISOCountrySubdivision(ISOCountry.FRANCE, "Aquitaine", "FR-B")
  val `Auvergne`                                   = new ISOCountrySubdivision(ISOCountry.FRANCE, "Auvergne", "FR-C")
  val `Basse-Normandie`                            = new ISOCountrySubdivision(ISOCountry.FRANCE, "Basse-Normandie", "FR-P")
  val `Bourgogne`                                  = new ISOCountrySubdivision(ISOCountry.FRANCE, "Bourgogne", "FR-D")
  val `Bretagne`                                   = new ISOCountrySubdivision(ISOCountry.FRANCE, "Bretagne", "FR-E")
  val `Centre France`                              = new ISOCountrySubdivision(ISOCountry.FRANCE, "Centre", "FR-F")
  val `Champagne-Ardenne`                          = new ISOCountrySubdivision(ISOCountry.FRANCE, "Champagne-Ardenne", "FR-G")
  val `Corse`                                      = new ISOCountrySubdivision(ISOCountry.FRANCE, "Corse", "FR-H")
  val `Franche-Comte`                              = new ISOCountrySubdivision(ISOCountry.FRANCE, "Franche-Comte", "FR-I")
  val `Haute-Normandie`                            = new ISOCountrySubdivision(ISOCountry.FRANCE, "Haute-Normandie", "FR-Q")
  val `Ile-de-France`                              = new ISOCountrySubdivision(ISOCountry.FRANCE, "Ile-de-France", "FR-J")
  val `Languedoc-Roussillon`                       = new ISOCountrySubdivision(ISOCountry.FRANCE, "Languedoc-Roussillon", "FR-K")
  val `Limousin`                                   = new ISOCountrySubdivision(ISOCountry.FRANCE, "Limousin", "FR-L")
  val `Lorraine`                                   = new ISOCountrySubdivision(ISOCountry.FRANCE, "Lorraine", "FR-M")
  val `Midi-Pyrenees`                              = new ISOCountrySubdivision(ISOCountry.FRANCE, "Midi-Pyrenees", "FR-N")
  val `Nord-Pas-de-Calais`                         = new ISOCountrySubdivision(ISOCountry.FRANCE, "Nord-Pas-de-Calais", "FR-O")
  val `Pays de la Loire`                           = new ISOCountrySubdivision(ISOCountry.FRANCE, "Pays de la Loire", "FR-R")
  val `Picardie`                                   = new ISOCountrySubdivision(ISOCountry.FRANCE, "Picardie", "FR-S")
  val `Poitou-Charentes`                           = new ISOCountrySubdivision(ISOCountry.FRANCE, "Poitou-Charentes", "FR-T")
  val `Provence-Alpes-Cote d'Azur`                 = new ISOCountrySubdivision(ISOCountry.FRANCE, "Provence-Alpes-Cote d'Azur", "FR-U")
  val `Rhone-Alpes`                                = new ISOCountrySubdivision(ISOCountry.FRANCE, "Rhone-Alpes", "FR-V")
  val `England`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_KINGDOM, "England", "GB-ENG")
  val `Northern Ireland`                           = new ISOCountrySubdivision(ISOCountry.UNITED_KINGDOM, "Northern Ireland", "GB-NIR")
  val `Scotland`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_KINGDOM, "Scotland", "GB-SCT")
  val `Wales`                                      = new ISOCountrySubdivision(ISOCountry.UNITED_KINGDOM, "Wales", "GB-WLS")
  val `Aitolia kai Akarnania`                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Aitolia kai Akarnania", "GR-01")
  val `Akhaia`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Akhaia", "GR-13")
  val `Argolis`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Argolis", "GR-11")
  val `Arkadhia`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Arkadhia", "GR-12")
  val `Arta`                                       = new ISOCountrySubdivision(ISOCountry.GREECE, "Arta", "DJ-AR")
  val `Attiki`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Attiki", "GR-A1")
  val `Dhodhekanisos`                              = new ISOCountrySubdivision(ISOCountry.GREECE, "Dhodhekanisos", "GR-81")
  val `Drama`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Drama", "GR-52")
  val `Evritania`                                  = new ISOCountrySubdivision(ISOCountry.GREECE, "Evritania", "GR-05")
  val `Evros`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Evros", "GR-71")
  val `Evvoia`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Evvoia", "GR-04")
  val `Florina`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Florina", "GR-63")
  val `Fokis`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Fokis", "GR-07")
  val `Fthiotis`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Fthiotis", "GR-06")
  val `Grevena`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Grevena", "GR-51")
  val `Ilia`                                       = new ISOCountrySubdivision(ISOCountry.GREECE, "Ilia", "GR-14")
  val `Imathia`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Imathia", "GR-53")
  val `Ioannina`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Ioannina", "GR-33")
  val `Iraklion`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Iraklion", "GR-91")
  val `Kardhitsa`                                  = new ISOCountrySubdivision(ISOCountry.GREECE, "Kardhitsa", "GR-41")
  val `Kastoria`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Kastoria", "GR-56")
  val `Kavala`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Kavala", "GR-55")
  val `Kefallinia`                                 = new ISOCountrySubdivision(ISOCountry.GREECE, "Kefallinia", "GR-23")
  val `Kerkira`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Kerkira", "GR-22")
  val `Khalkidhiki`                                = new ISOCountrySubdivision(ISOCountry.GREECE, "Khalkidhiki", "GR-64")
  val `Khania`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Khania", "GR-94")
  val `Khios`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Khios", "GR-85")
  val `Kikladhes`                                  = new ISOCountrySubdivision(ISOCountry.GREECE, "Kikladhes", "GR-82")
  val `Kilkis`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Kilkis", "GR-57")
  val `Korinthia`                                  = new ISOCountrySubdivision(ISOCountry.GREECE, "Korinthia", "GR-15")
  val `Kozani`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Kozani", "GR-58")
  val `Lakonia`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Lakonia", "GR-16")
  val `Larisa`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Larisa", "GR-42")
  val `Lasithi`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Lasithi", "GR-92")
  val `Lesvos`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Lesvos", "GR-83")
  val `Levkas`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Levkas", "GR-24")
  val `Magnisia`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Magnisia", "GR-43")
  val `Messinia`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Messinia", "GR-17")
  val `Pella`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Pella", "GR-59")
  val `Pieria`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Pieria", "GR-61")
  val `Preveza`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Preveza", "GR-34")
  val `Rethimni`                                   = new ISOCountrySubdivision(ISOCountry.GREECE, "Rethimni", "GR-93")
  val `Rodhopi`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Rodhopi", "GR-73")
  val `Samos`                                      = new ISOCountrySubdivision(ISOCountry.GREECE, "Samos", "GR-84")
  val `Serrai`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Serrai", "GR-62")
  val `Thesprotia`                                 = new ISOCountrySubdivision(ISOCountry.GREECE, "Thesprotia", "GR-32")
  val `Thessaloniki`                               = new ISOCountrySubdivision(ISOCountry.GREECE, "Thessaloniki", "GR-54")
  val `Trikala`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Trikala", "GR-44")
  val `Voiotia`                                    = new ISOCountrySubdivision(ISOCountry.GREECE, "Voiotia", "GR-03")
  val `Xanthi`                                     = new ISOCountrySubdivision(ISOCountry.GREECE, "Xanthi", "GR-72")
  val `Zakinthos`                                  = new ISOCountrySubdivision(ISOCountry.GREECE, "Zakinthos", "GR-21")
  val `Bjelovarsko-bilogorska zupanija`            = new ISOCountrySubdivision(ISOCountry.CROATIA, "Bjelovarsko-bilogorska zupanija", "HR-07")
  val `Brodsko-posavska zupanija`                  = new ISOCountrySubdivision(ISOCountry.CROATIA, "Brodsko-posavska zupanija", "HR-12")
  val `Dubrovacko-neretvanska zupanija`            = new ISOCountrySubdivision(ISOCountry.CROATIA, "Dubrovacko-neretvanska zupanija", "HR-19")
  val `Grad Zagreb`                                = new ISOCountrySubdivision(ISOCountry.CROATIA, "Grad Zagreb", "HR-21")
  val `Istarska zupanija`                          = new ISOCountrySubdivision(ISOCountry.CROATIA, "Istarska zupanija", "HR-18")
  val `Karlovacka zupanija`                        = new ISOCountrySubdivision(ISOCountry.CROATIA, "Karlovacka zupanija", "HR-04")
  val `Koprivnicko-krizevacka zupanija`            = new ISOCountrySubdivision(ISOCountry.CROATIA, "Koprivnicko-krizevacka zupanija", "HR-06")
  val `Krapinsko-zagorska zupanija`                = new ISOCountrySubdivision(ISOCountry.CROATIA, "Krapinsko-zagorska zupanija", "HR-02")
  val `Licko-senjska zupanija`                     = new ISOCountrySubdivision(ISOCountry.CROATIA, "Licko-senjska zupanija", "HR-09")
  val `Medimurska zupanija`                        = new ISOCountrySubdivision(ISOCountry.CROATIA, "Medimurska zupanija", "HR-20")
  val `Osjecko-baranjska zupanija`                 = new ISOCountrySubdivision(ISOCountry.CROATIA, "Osjecko-baranjska zupanija", "HR-14")
  val `Pozesko-slavonska zupanija`                 = new ISOCountrySubdivision(ISOCountry.CROATIA, "Pozesko-slavonska zupanija", "HR-11")
  val `Primorsko-goranska zupanija`                = new ISOCountrySubdivision(ISOCountry.CROATIA, "Primorsko-goranska zupanija", "HR-08")
  val `Sibensko-kninska zupanija`                  = new ISOCountrySubdivision(ISOCountry.CROATIA, "Sibensko-kninska zupanija", "HR-15")
  val `Sisacko-moslavacka zupanija`                = new ISOCountrySubdivision(ISOCountry.CROATIA, "Sisacko-moslavacka zupanija", "HR-03")
  val `Splitsko-dalmatinska zupanija`              = new ISOCountrySubdivision(ISOCountry.CROATIA, "Splitsko-dalmatinska zupanija", "HR-17")
  val `Varazdinska zupanija`                       = new ISOCountrySubdivision(ISOCountry.CROATIA, "Varazdinska zupanija", "HR-05")
  val `Viroviticko-podravska zupanija`             = new ISOCountrySubdivision(ISOCountry.CROATIA, "Viroviticko-podravska zupanija", "HR-10")
  val `Vukovarsko-srijemska zupanija`              = new ISOCountrySubdivision(ISOCountry.CROATIA, "Vukovarsko-srijemska zupanija", "HR-16")
  val `Zadarska zupanija`                          = new ISOCountrySubdivision(ISOCountry.CROATIA, "Zadarska zupanija", "HR-13")
  val `Zagrebacka zupanija`                        = new ISOCountrySubdivision(ISOCountry.CROATIA, "Zagrebacka zupanija", "HR-01")
  val `Bacs-Kiskun`                                = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Bacs-Kiskun", "HU-BK")
  val `Baranya`                                    = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Baranya", "HU-BA")
  val `Bekes`                                      = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Bekes", "HU-BE")
  val `Borsod-Abauj-Zemplen`                       = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Borsod-Abauj-Zemplen", "HU-BZ")
  val `Budapest`                                   = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Budapest", "HU-BU")
  val `Csongrad`                                   = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Csongrad", "HU-CS")
  val `Fejer`                                      = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Fejer", "HU-FE")
  val `Gyor-Moson-Sopron`                          = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Gyor-Moson-Sopron", "HU-GS")
  val `Hajdu-Bihar`                                = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Hajdu-Bihar", "HU-HB")
  val `Heves`                                      = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Heves", "HU-HE")
  val `Jasz-Nagykun-Szolnok`                       = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Jasz-Nagykun-Szolnok", "HU-JN")
  val `Komarom-Esztergom`                          = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Komarom-Esztergom", "HU-KE")
  val `Nograd`                                     = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Nograd", "HU-NO")
  val `Pest`                                       = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Pest", "HU-PE")
  val `Somogy`                                     = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Somogy", "HU-SO")
  val `Szabolcs-Szatmar-Bereg`                     = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Szabolcs-Szatmar-Bereg", "HU-SZ")
  val `Tolna`                                      = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Tolna", "HU-TO")
  val `Vas`                                        = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Vas", "HU-VA")
  val `Veszprem`                                   = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Veszprem", "HU-VE")
  val `Zala`                                       = new ISOCountrySubdivision(ISOCountry.HUNGARY, "Zala", "HU-ZA")
  val `Carlow`                                     = new ISOCountrySubdivision(ISOCountry.IRELAND, "Carlow", "IE-CW")
  val `Cavan`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Cavan", "IE-CN")
  val `Clare`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Clare", "IE-CE")
  val `Cork`                                       = new ISOCountrySubdivision(ISOCountry.IRELAND, "Cork", "IE-CO")
  val `Donegal`                                    = new ISOCountrySubdivision(ISOCountry.IRELAND, "Donegal", "IE-DL")
  val `Dublin`                                     = new ISOCountrySubdivision(ISOCountry.IRELAND, "Dublin", "IE-D")
  val `Galway`                                     = new ISOCountrySubdivision(ISOCountry.IRELAND, "Galway", "IE-G")
  val `Kerry`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Kerry", "IE-KY")
  val `Kildare`                                    = new ISOCountrySubdivision(ISOCountry.IRELAND, "Kildare", "IE-KE")
  val `Kilkenny`                                   = new ISOCountrySubdivision(ISOCountry.IRELAND, "Kilkenny", "IE-KK")
  val `Laois`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Laois", "IE-LS")
  val `Leitrim`                                    = new ISOCountrySubdivision(ISOCountry.IRELAND, "Leitrim", "IE-LM")
  val `Limerick`                                   = new ISOCountrySubdivision(ISOCountry.IRELAND, "Limerick", "IE-LK")
  val `Longford`                                   = new ISOCountrySubdivision(ISOCountry.IRELAND, "Longford", "IE-LD")
  val `Louth`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Louth", "IE-LH")
  val `Mayo`                                       = new ISOCountrySubdivision(ISOCountry.IRELAND, "Mayo", "IE-MO")
  val `Meath`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Meath", "IE-MH")
  val `Monaghan`                                   = new ISOCountrySubdivision(ISOCountry.IRELAND, "Monaghan", "IE-MN")
  val `Offaly`                                     = new ISOCountrySubdivision(ISOCountry.IRELAND, "Offaly", "IE-OY")
  val `Roscommon`                                  = new ISOCountrySubdivision(ISOCountry.IRELAND, "Roscommon", "IE-RN")
  val `Sligo`                                      = new ISOCountrySubdivision(ISOCountry.IRELAND, "Sligo", "IE-SO")
  val `Tipperary`                                  = new ISOCountrySubdivision(ISOCountry.IRELAND, "Tipperary", "IE-TA")
  val `Waterford`                                  = new ISOCountrySubdivision(ISOCountry.IRELAND, "Waterford", "IE-WD")
  val `Westmeath`                                  = new ISOCountrySubdivision(ISOCountry.IRELAND, "Westmeath", "IE-WH")
  val `Wexford`                                    = new ISOCountrySubdivision(ISOCountry.IRELAND, "Wexford", "IE-WX")
  val `Wicklow`                                    = new ISOCountrySubdivision(ISOCountry.IRELAND, "Wicklow", "IE-WW")
  val `Austurland`                                 = new ISOCountrySubdivision(ISOCountry.ICELAND, "Austurland", "IS-7")
  val `Hofudborgarsvaedi utan Reykjavikur`         = new ISOCountrySubdivision(ISOCountry.ICELAND, "Hofudborgarsvaedi utan Reykjavikur", "IS-1")
  val `Nordurland eystra`                          = new ISOCountrySubdivision(ISOCountry.ICELAND, "Nordurland eystra", "IS-6")
  val `Nordurland vestra`                          = new ISOCountrySubdivision(ISOCountry.ICELAND, "Nordurland vestra", "IS-5")
  val `Sudurland`                                  = new ISOCountrySubdivision(ISOCountry.ICELAND, "Sudurland", "IS-8")
  val `Sudurnes`                                   = new ISOCountrySubdivision(ISOCountry.ICELAND, "Sudurnes", "IS-2")
  val `Vestfirdir`                                 = new ISOCountrySubdivision(ISOCountry.ICELAND, "Vestfirdir", "IS-4")
  val `Vesturland`                                 = new ISOCountrySubdivision(ISOCountry.ICELAND, "Vesturland", "IS-3")
  val `Abruzzo`                                    = new ISOCountrySubdivision(ISOCountry.ITALY, "Abruzzo", "IT-65")
  val `Basilicata`                                 = new ISOCountrySubdivision(ISOCountry.ITALY, "Basilicata", "IT-77")
  val `Calabria`                                   = new ISOCountrySubdivision(ISOCountry.ITALY, "Calabria", "IT-78")
  val `Campania`                                   = new ISOCountrySubdivision(ISOCountry.ITALY, "Campania", "IT-72")
  val `Emilia-Romagna`                             = new ISOCountrySubdivision(ISOCountry.ITALY, "Emilia-Romagna", "IT-45")
  val `Friuli-Venezia Giulia`                      = new ISOCountrySubdivision(ISOCountry.ITALY, "Friuli-Venezia Giulia", "IT-36")
  val `Lazio`                                      = new ISOCountrySubdivision(ISOCountry.ITALY, "Lazio", "IT-62")
  val `Liguria`                                    = new ISOCountrySubdivision(ISOCountry.ITALY, "Liguria", "IT-42")
  val `Lombardia`                                  = new ISOCountrySubdivision(ISOCountry.ITALY, "Lombardia", "IT-25")
  val `Marche`                                     = new ISOCountrySubdivision(ISOCountry.ITALY, "Marche", "IT-57")
  val `Molise`                                     = new ISOCountrySubdivision(ISOCountry.ITALY, "Molise", "IT-67")
  val `Piemonte`                                   = new ISOCountrySubdivision(ISOCountry.ITALY, "Piemonte", "IT-21")
  val `Puglia`                                     = new ISOCountrySubdivision(ISOCountry.ITALY, "Puglia", "IT-75")
  val `Sardegna`                                   = new ISOCountrySubdivision(ISOCountry.ITALY, "Sardegna", "IT-88")
  val `Sicilia`                                    = new ISOCountrySubdivision(ISOCountry.ITALY, "Sicilia", "IT-82")
  val `Toscana`                                    = new ISOCountrySubdivision(ISOCountry.ITALY, "Toscana", "IT-52")
  val `Trentino-Alto Adige`                        = new ISOCountrySubdivision(ISOCountry.ITALY, "Trentino-Alto Adige", "IT-32")
  val `Umbria`                                     = new ISOCountrySubdivision(ISOCountry.ITALY, "Umbria", "IT-55")
  val `Valle d'Aosta`                              = new ISOCountrySubdivision(ISOCountry.ITALY, "Valle d'Aosta", "IT-23")
  val `Veneto`                                     = new ISOCountrySubdivision(ISOCountry.ITALY, "Veneto", "IT-34")
  val `Balzers`                                    = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Balzers", "LI-01")
  val `Eschen`                                     = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Eschen", "LI-02")
  val `Gamprin`                                    = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Gamprin", "LI-03")
  val `Mauren`                                     = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Mauren", "LI-04")
  val `Planken`                                    = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Planken", "LI-05")
  val `Ruggell`                                    = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Ruggell", "LI-06")
  val `Schaan`                                     = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Schaan", "LI-07")
  val `Schellenberg`                               = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Schellenberg", "LI-08")
  val `Triesen`                                    = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Triesen", "LI-09")
  val `Triesenberg`                                = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Triesenberg", "LI-10")
  val `Vaduz`                                      = new ISOCountrySubdivision(ISOCountry.LIECHTENSTEIN, "Vaduz", "LI-11")
  val `Alytaus Apskritis`                          = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Alytaus Apskritis", "LT-AL")
  val `Kauno Apskritis`                            = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Kauno Apskritis", "LT-KU")
  val `Klaipedos Apskritis`                        = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Klaipedos Apskritis", "LT-KL")
  val `Marijampoles Apskritis`                     = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Marijampoles Apskritis", "LT-MR")
  val `Panevezio Apskritis`                        = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Panevezio Apskritis", "LT-PN")
  val `Siauliu Apskritis`                          = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Siauliu Apskritis", "LT-SA")
  val `Taurages Apskritis`                         = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Taurages Apskritis", "LT-TA")
  val `Telsiu Apskritis`                           = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Telsiu Apskritis", "LT-TE")
  val `Utenos Apskritis`                           = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Utenos Apskritis", "LT-UT")
  val `Vilniaus Apskritis`                         = new ISOCountrySubdivision(ISOCountry.LITHUANIA, "Vilniaus Apskritis", "LT-VL")
  val `Diekirch`                                   = new ISOCountrySubdivision(ISOCountry.LUXEMBOURG, "Diekirch", "LU-DI")
  val `Grevenmacher`                               = new ISOCountrySubdivision(ISOCountry.LUXEMBOURG, "Grevenmacher", "LU-GR")
  val `Luxembourg`                                 = new ISOCountrySubdivision(ISOCountry.LUXEMBOURG, "Luxembourg", "LU-LU")
  val `Adazu`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Adazu", "LV-011")
  val `Aglonas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Aglonas", "LV-001")
  val `Aizkraukles`                                = new ISOCountrySubdivision(ISOCountry.LATVIA, "Aizkraukles", "LV-002")
  val `Aizputes`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Aizputes", "LV-003")
  val `Alojas`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Alojas", "LV-005")
  val `Aluksnes`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Aluksnes", "LV-007")
  val `Babites`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Babites", "LV-012")
  val `Baltinavas`                                 = new ISOCountrySubdivision(ISOCountry.LATVIA, "Baltinavas", "LV-014")
  val `Balvu`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Balvu", "LV-015")
  val `Bauskas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Bauskas", "LV-016")
  val `Beverinas`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Beverinas", "LV-017")
  val `Brocenu`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Brocenu", "LV-018")
  val `Carnikavas`                                 = new ISOCountrySubdivision(ISOCountry.LATVIA, "Carnikavas", "LV-020")
  val `Cesu`                                       = new ISOCountrySubdivision(ISOCountry.LATVIA, "Cesu", "LV-022")
  val `Cesvaines`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Cesvaines", "LV-021")
  val `Ciblas`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ciblas", "LV-023")
  val `Daugavpils`                                 = new ISOCountrySubdivision(ISOCountry.LATVIA, "Daugavpils", "LV-025")
  val `Dobeles`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Dobeles", "LV-026")
  val `Dundagas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Dundagas", "LV-027")
  val `Gulbenes`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Gulbenes", "LV-033")
  val `Iecavas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Iecavas", "LV-034")
  val `Incukalna`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Incukalna", "LV-037")
  val `Jaunjelgavas`                               = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jaunjelgavas", "LV-038")
  val `Jaunpiebalgas`                              = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jaunpiebalgas", "LV-039")
  val `Jaunpils`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jaunpils", "LV-040")
  val `Jekabpils`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jekabpils", "LV-042")
  val `Jelgava`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jelgava", "LV-JEL")
  val `Jelgavas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jelgavas", "LV-041")
  val `Jurmala`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Jurmala", "LV-JUR")
  val `Kekavas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Kekavas", "LV-052")
  val `Kokneses`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Kokneses", "LV-046")
  val `Kraslavas`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Kraslavas", "LV-047")
  val `Kuldigas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Kuldigas", "LV-050")
  val `Liepaja`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Liepaja", "LV-LPX")
  val `Liepajas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Liepajas", "LV-LE")
  val `Limbazu`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Limbazu", "LV-LM")
  val `Lubanas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Lubanas", "LV-057")
  val `Ludzas`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ludzas", "LV-058")
  val `Madonas`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Madonas", "LV-059")
  val `Malpils`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Malpils", "LV-061")
  val `Ogres`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ogres", "LV-067")
  val `Olaines`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Olaines", "LV-068")
  val `Ozolnieku`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ozolnieku", "LV-069")
  val `Preilu`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Preilu", "LV-073")
  val `Rezeknes`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Rezeknes", "LV-077")
  val `Riga`                                       = new ISOCountrySubdivision(ISOCountry.LATVIA, "Riga", "LV-RIX")
  val `Rigas`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Rigas", "LV-RI")
  val `Rojas`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Rojas", "LV-079")
  val `Ropazu`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ropazu", "LV-080")
  val `Rugaju`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Rugaju", "LV-082")
  val `Rundales`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Rundales", "LV-083")
  val `Salacgrivas`                                = new ISOCountrySubdivision(ISOCountry.LATVIA, "Salacgrivas", "LV-086")
  val `Saldus`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Saldus", "LV-088")
  val `Sejas`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Sejas", "LV-090")
  val `Siguldas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Siguldas", "LV-091")
  val `Skrundas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Skrundas", "LV-093")
  val `Stopinu`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Stopinu", "LV-095")
  val `Strencu`                                    = new ISOCountrySubdivision(ISOCountry.LATVIA, "Strencu", "LV-096")
  val `Talsu`                                      = new ISOCountrySubdivision(ISOCountry.LATVIA, "Talsu", "LV-097")
  val `Tukuma`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Tukuma", "LV-099")
  val `Vainodes`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Vainodes", "LV-100")
  val `Valkas`                                     = new ISOCountrySubdivision(ISOCountry.LATVIA, "Valkas", "LV-101")
  val `Valmieras`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Valmieras", "LV-VM")
  val `Varkavas`                                   = new ISOCountrySubdivision(ISOCountry.LATVIA, "Varkavas", "LV-103")
  val `Vecumnieku`                                 = new ISOCountrySubdivision(ISOCountry.LATVIA, "Vecumnieku", "LV-105")
  val `Ventspils`                                  = new ISOCountrySubdivision(ISOCountry.LATVIA, "Ventspils", "LV-106")
  val `Monaco`                                     = new ISOCountrySubdivision(ISOCountry.MONACO, "Monaco", "MC-MO")
  val `Anenii Noi`                                 = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Anenii Noi", "MD-AN")
  val `Balti`                                      = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Balti", "MD-BA")
  val `Basarabeasca`                               = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Basarabeasca", "MD-BS")
  val `Bender`                                     = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Bender", "MD-BD")
  val `Briceni`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Briceni", "MD-BR")
  val `Cahul`                                      = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Cahul", "MD-CA")
  val `Calarasi - Moldova`                         = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Calarasi", "MD-CL")
  val `Cantemir`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Cantemir", "MD-CT")
  val `Causeni`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Causeni", "MD-CS")
  val `Chisinau`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Chisinau", "MD-CU")
  val `Cimislia`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Cimislia", "MD-CM")
  val `Criuleni`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Criuleni", "MD-CR")
  val `Donduseni`                                  = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Donduseni", "MD-DO")
  val `Drochia`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Drochia", "MD-DR")
  val `Dubasari`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Dubasari", "MD-DU")
  val `Edinet`                                     = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Edinet", "MD-ED")
  val `Falesti`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Falesti", "MD-FA")
  val `Floresti`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Floresti", "MD-FL")
  val `Gagauzia, Unitatea teritoriala autonoma`    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Gagauzia, Unitatea teritoriala autonoma", "MD-GA")
  val `Glodeni`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Glodeni", "MD-GL")
  val `Hincesti`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Hincesti", "MD-HI")
  val `Ialoveni`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Ialoveni", "MD-IA")
  val `Leova`                                      = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Leova", "MD-LE")
  val `Nisporeni`                                  = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Nisporeni", "MD-NI")
  val `Ocnita`                                     = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Ocnita", "MD-OC")
  val `Orhei`                                      = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Orhei", "MD-OR")
  val `Rezina`                                     = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Rezina", "MD-RE")
  val `Riscani`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Riscani", "MD-RI")
  val `Singerei`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Singerei", "MD-SI")
  val `Soldanesti`                                 = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Soldanesti", "MD-SD")
  val `Soroca`                                     = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Soroca", "MD-SO")
  val `Stefan Voda`                                = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Stefan Voda", "MD-SV")
  val `Stinga Nistrului, unitatea teritoriala din` = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Stinga Nistrului, unitatea teritoriala din", "MD-SN")
  val `Straseni`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Straseni", "MD-ST")
  val `Taraclia`                                   = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Taraclia", "MD-TA")
  val `Telenesti`                                  = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Telenesti", "MD-TE")
  val `Ungheni`                                    = new ISOCountrySubdivision(ISOCountry.MOLDOVA, "Ungheni", "MD-UN")
  val `Bar`                                        = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Bar", "ME-02")
  val `Budva`                                      = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Budva", "ME-05")
  val `Cetinje`                                    = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Cetinje", "ME-06")
  val `Danilovgrad`                                = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Danilovgrad", "ME-07")
  val `Herceg-Novi`                                = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Herceg-Novi", "ME-08")
  val `Kolasin`                                    = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Kolasin", "ME-09")
  val `Kotor`                                      = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Kotor", "ME-10")
  val `Mojkovac`                                   = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Mojkovac", "ME-11")
  val `Niksic`                                     = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Niksic", "ME-12")
  val `Podgorica`                                  = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Podgorica", "ME-16")
  val `Tivat`                                      = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Tivat", "ME-19")
  val `Ulcinj`                                     = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Ulcinj", "ME-20")
  val `Zabljak`                                    = new ISOCountrySubdivision(ISOCountry.MONTENEGRO, "Zabljak", "ME-21")
  val `Aracinovo`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Aracinovo", "MK-02")
  val `Berovo`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Berovo", "MK-03")
  val `Bitola`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Bitola", "MK-04")
  val `Bogdanci`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Bogdanci", "MK-05")
  val `Bogovinje`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Bogovinje", "MK-06")
  val `Bosilovo`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Bosilovo", "MK-07")
  val `Brvenica`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Brvenica", "MK-08")
  val `Caska`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Caska", "MK-80")
  val `Centar Zupa`                                = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Centar Zupa", "MK-78")
  val `Cesinovo-Oblesevo`                          = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Cesinovo-Oblesevo", "MK-81")
  val `Cucer Sandevo`                              = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Cucer Sandevo", "MK-82")
  val `Debar`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Debar", "MK-21")
  val `Debarca`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Debarca", "MK-22")
  val `Delcevo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Delcevo", "MK-23")
  val `Demir Hisar`                                = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Demir Hisar", "MK-25")
  val `Demir Kapija`                               = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Demir Kapija", "MK-24")
  val `Dojran`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Dojran", "MK-26")
  val `Dolneni`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Dolneni", "MK-27")
  val `Gevgelija`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Gevgelija", "MK-18")
  val `Gostivar`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Gostivar", "MK-19")
  val `Gradsko`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Gradsko", "MK-20")
  val `Ilinden`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Ilinden", "MK-34")
  val `Jegunovce`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Jegunovce", "MK-35")
  val `Karbinci`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Karbinci", "MK-37")
  val `Kavadarci`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kavadarci", "MK-36")
  val `Kicevo`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kicevo", "MK-40")
  val `Kocani`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kocani", "MK-42")
  val `Konce`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Konce", "MK-41")
  val `Kondovo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kondovo", "-")
  val `Kratovo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kratovo", "MK-43")
  val `Kriva Palanka`                              = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kriva Palanka", "MK-44")
  val `Krivogastani`                               = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Krivogastani", "MK-45")
  val `Krusevo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Krusevo", "MK-46")
  val `Kumanovo`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Kumanovo", "MK-47")
  val `Lipkovo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Lipkovo", "MK-48")
  val `Lozovo`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Lozovo", "MK-49")
  val `Makedonska Kamenica`                        = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Makedonska Kamenica", "MK-51")
  val `Makedonski Brod`                            = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Makedonski Brod", "MK-52")
  val `Mavrovo i Rostusa`                          = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Mavrovo i Rostusa", "MK-50")
  val `Mogila`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Mogila", "MK-53")
  val `Negotino`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Negotino", "MK-54")
  val `Novaci`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Novaci", "MK-55")
  val `Novo Selo`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Novo Selo", "MK-56")
  val `Ohrid`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Ohrid", "MK-58")
  val `Pehcevo`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Pehcevo", "MK-60")
  val `Petrovec`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Petrovec", "MK-59")
  val `Plasnica`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Plasnica", "MK-61")
  val `Prilep`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Prilep", "MK-62")
  val `Probistip`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Probistip", "MK-63")
  val `Radovis`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Radovis", "MK-64")
  val `Rankovce`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Rankovce", "MK-65")
  val `Resen`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Resen", "MK-66")
  val `Rosoman`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Rosoman", "MK-67")
  val `Skopje`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Skopje", "MK-85")
  val `Sopiste`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Sopiste", "MK-70")
  val `Staro Nagoricane`                           = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Staro Nagoricane", "MK-71")
  val `Stip`                                       = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Stip", "MK-83")
  val `Struga`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Struga", "MK-72")
  val `Strumica`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Strumica", "MK-73")
  val `Studenicani`                                = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Studenicani", "MK-74")
  val `Sveti Nikole`                               = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Sveti Nikole", "MK-69")
  val `Tearce`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Tearce", "MK-75")
  val `Tetovo`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Tetovo", "MK-76")
  val `Valandovo`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Valandovo", "MK-10")
  val `Vasilevo`                                   = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Vasilevo", "MK-11")
  val `Veles`                                      = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Veles", "MK-13")
  val `Vevcani`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Vevcani", "MK-12")
  val `Vinica`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Vinica", "MK-14")
  val `Vrapciste`                                  = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Vrapciste", "MK-16")
  val `Zelenikovo`                                 = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Zelenikovo", "MK-32")
  val `Zelino`                                     = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Zelino", "MK-30")
  val `Zrnovci`                                    = new ISOCountrySubdivision(ISOCountry.MACEDONIA, "Zrnovci", "MK-33")
  val `Malta`                                      = new ISOCountrySubdivision(ISOCountry.MALTA, "Malta", "MT")
  val `Drenthe`                                    = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Drenthe", "NL-DR")
  val `Flevoland`                                  = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Flevoland", "NL-FL")
  val `Fryslan`                                    = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Fryslan", "NL-FR")
  val `Gelderland`                                 = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Gelderland", "NL-GE")
  val `Groningen`                                  = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Groningen", "NL-GR")
  val `Limburg`                                    = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Limburg", "NL-LI")
  val `Noord-Brabant`                              = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Noord-Brabant", "NL-NB")
  val `Noord-Holland`                              = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Noord-Holland", "NL-NH")
  val `Overijssel`                                 = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Overijssel", "NL-OV")
  val `Utrecht`                                    = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Utrecht", "NL-UT")
  val `Zeeland`                                    = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Zeeland", "NL-ZE")
  val `Zuid-Holland`                               = new ISOCountrySubdivision(ISOCountry.NETHERLANDS, "Zuid-Holland", "NL-ZH")
  val `Akershus`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Akershus", "NO-02")
  val `Aust-Agder`                                 = new ISOCountrySubdivision(ISOCountry.NORWAY, "Aust-Agder", "NO-09")
  val `Buskerud`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Buskerud", "NO-06")
  val `Finnmark`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Finnmark", "NO-20")
  val `Hedmark`                                    = new ISOCountrySubdivision(ISOCountry.NORWAY, "Hedmark", "NO-04")
  val `Hordaland`                                  = new ISOCountrySubdivision(ISOCountry.NORWAY, "Hordaland", "NO-12")
  val `More og Romsdal`                            = new ISOCountrySubdivision(ISOCountry.NORWAY, "More og Romsdal", "NO-15")
  val `Nord-Trondelag`                             = new ISOCountrySubdivision(ISOCountry.NORWAY, "Nord-Trondelag", "NO-17")
  val `Nordland`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Nordland", "NO-18")
  val `Oppland`                                    = new ISOCountrySubdivision(ISOCountry.NORWAY, "Oppland", "NO-05")
  val `Oslo`                                       = new ISOCountrySubdivision(ISOCountry.NORWAY, "Oslo", "NO-03")
  val `Ostfold`                                    = new ISOCountrySubdivision(ISOCountry.NORWAY, "Ostfold", "NO-01")
  val `Rogaland`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Rogaland", "NO-11")
  val `Sogn og Fjordane`                           = new ISOCountrySubdivision(ISOCountry.NORWAY, "Sogn og Fjordane", "NO-14")
  val `Sor-Trondelag`                              = new ISOCountrySubdivision(ISOCountry.NORWAY, "Sor-Trondelag", "NO-16")
  val `Telemark`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Telemark", "NO-08")
  val `Troms`                                      = new ISOCountrySubdivision(ISOCountry.NORWAY, "Troms", "NO-19")
  val `Vest-Agder`                                 = new ISOCountrySubdivision(ISOCountry.NORWAY, "Vest-Agder", "NO-10")
  val `Vestfold`                                   = new ISOCountrySubdivision(ISOCountry.NORWAY, "Vestfold", "NO-07")
  val `Dolnoslaskie`                               = new ISOCountrySubdivision(ISOCountry.POLAND, "Dolnoslaskie", "PL-DS")
  val `Kujawsko-Pomorskie`                         = new ISOCountrySubdivision(ISOCountry.POLAND, "Kujawsko-Pomorskie", "PL-KP")
  val `Lodzkie`                                    = new ISOCountrySubdivision(ISOCountry.POLAND, "Lodzkie", "PL-LD")
  val `Lubelskie`                                  = new ISOCountrySubdivision(ISOCountry.POLAND, "Lubelskie", "PL-LU")
  val `Lubuskie`                                   = new ISOCountrySubdivision(ISOCountry.POLAND, "Lubuskie", "PL-LB")
  val `Malopolskie`                                = new ISOCountrySubdivision(ISOCountry.POLAND, "Malopolskie", "PL-MA")
  val `Mazowieckie`                                = new ISOCountrySubdivision(ISOCountry.POLAND, "Mazowieckie", "PL-MZ")
  val `Opolskie`                                   = new ISOCountrySubdivision(ISOCountry.POLAND, "Opolskie", "PL-OP")
  val `Podkarpackie`                               = new ISOCountrySubdivision(ISOCountry.POLAND, "Podkarpackie", "PL-PK")
  val `Podlaskie`                                  = new ISOCountrySubdivision(ISOCountry.POLAND, "Podlaskie", "PL-PD")
  val `Pomorskie`                                  = new ISOCountrySubdivision(ISOCountry.POLAND, "Pomorskie", "PL-PM")
  val `Slaskie`                                    = new ISOCountrySubdivision(ISOCountry.POLAND, "Slaskie", "PL-SL")
  val `Swietokrzyskie`                             = new ISOCountrySubdivision(ISOCountry.POLAND, "Swietokrzyskie", "PL-SK")
  val `Warminsko-Mazurskie`                        = new ISOCountrySubdivision(ISOCountry.POLAND, "Warminsko-Mazurskie", "PL-WN")
  val `Wielkopolskie`                              = new ISOCountrySubdivision(ISOCountry.POLAND, "Wielkopolskie", "PL-WP")
  val `Zachodniopomorskie`                         = new ISOCountrySubdivision(ISOCountry.POLAND, "Zachodniopomorskie", "PL-ZP")
  val `Aveiro`                                     = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Aveiro", "PT-01")
  val `Beja`                                       = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Beja", "PT-02")
  val `Braga`                                      = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Braga", "PT-03")
  val `Braganca`                                   = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Braganca", "PT-04")
  val `Castelo Branco`                             = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Castelo Branco", "PT-05")
  val `Coimbra`                                    = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Coimbra", "PT-06")
  val `Evora`                                      = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Evora", "PT-07")
  val `Faro`                                       = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Faro", "PT-08")
  val `Guarda`                                     = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Guarda", "PT-09")
  val `Leiria`                                     = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Leiria", "PT-10")
  val `Lisboa`                                     = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Lisboa", "PT-11")
  val `Portalegre`                                 = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Portalegre", "PT-12")
  val `Porto`                                      = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Porto", "PT-13")
  val `Regiao Autonoma da Madeira`                 = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Regiao Autonoma da Madeira", "PT-30")
  val `Regiao Autonoma dos Acores`                 = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Regiao Autonoma dos Acores", "PT-20")
  val `Santarem`                                   = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Santarem", "PT-14")
  val `Setubal`                                    = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Setubal", "PT-15")
  val `Viana do Castelo`                           = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Viana do Castelo", "PT-16")
  val `Vila Real`                                  = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Vila Real", "PT-17")
  val `Viseu`                                      = new ISOCountrySubdivision(ISOCountry.PORTUGAL, "Viseu", "PT-18")
  val `Alba`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Alba", "RO-AB")
  val `Arad`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Arad", "RO-AR")
  val `Arges`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Arges", "RO-AG")
  val `Bacau`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Bacau", "RO-BC")
  val `Bihor`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Bihor", "RO-BH")
  val `Bistrita-Nasaud`                            = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Bistrita-Nasaud", "RO-BN")
  val `Botosani`                                   = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Botosani", "RO-BT")
  val `Braila`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Braila", "RO-BR")
  val `Brasov`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Brasov", "RO-BV")
  val `Bucuresti`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Bucuresti", "RO-B")
  val `Buzau`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Buzau", "RO-BZ")
  val `Calarasi`                                   = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Calarasi", "RO-CL")
  val `Caras-Severin`                              = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Caras-Severin", "RO-CS")
  val `Cluj`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Cluj", "RO-CJ")
  val `Constanta`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Constanta", "RO-CT")
  val `Covasna`                                    = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Covasna", "RO-CV")
  val `Dambovita`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Dambovita", "RO-DB")
  val `Dolj`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Dolj", "RO-DJ")
  val `Galati`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Galati", "RO-GL")
  val `Giurgiu`                                    = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Giurgiu", "RO-GR")
  val `Gorj`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Gorj", "RO-GJ")
  val `Harghita`                                   = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Harghita", "RO-HR")
  val `Hunedoara`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Hunedoara", "RO-HD")
  val `Ialomita`                                   = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Ialomita", "RO-IL")
  val `Iasi`                                       = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Iasi", "RO-IS")
  val `Ilfov`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Ilfov", "RO-IF")
  val `Maramures`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Maramures", "RO-MM")
  val `Mehedinti`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Mehedinti", "RO-MH")
  val `Mures`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Mures", "RO-MS")
  val `Neamt`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Neamt", "RO-NT")
  val `Olt`                                        = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Olt", "RO-OT")
  val `Prahova`                                    = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Prahova", "RO-PH")
  val `Salaj`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Salaj", "RO-SJ")
  val `Satu Mare`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Satu Mare", "RO-SM")
  val `Sibiu`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Sibiu", "RO-SB")
  val `Suceava`                                    = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Suceava", "RO-SV")
  val `Teleorman`                                  = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Teleorman", "RO-TR")
  val `Timis`                                      = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Timis", "RO-TM")
  val `Tulcea`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Tulcea", "RO-TL")
  val `Valcea`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Valcea", "RO-VL")
  val `Vaslui`                                     = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Vaslui", "RO-VS")
  val `Vrancea`                                    = new ISOCountrySubdivision(ISOCountry.ROMANIA, "Vrancea", "RO-VN")
  val `Central Serbia`                             = new ISOCountrySubdivision(ISOCountry.SERBIA, "Central Serbia", "-")
  val `Kosovo`                                     = new ISOCountrySubdivision(ISOCountry.SERBIA, "Kosovo", "-")
  val `Vojvodina`                                  = new ISOCountrySubdivision(ISOCountry.SERBIA, "Vojvodina", "-")
  val `Blekinge Lan`                               = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Blekinge Lan", "SE-K")
  val `Dalarnas Lan`                               = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Dalarnas Lan", "SE-W")
  val `Gavleborgs Lan`                             = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Gavleborgs Lan", "SE-X")
  val `Gotlands Lan`                               = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Gotlands Lan", "SE-I")
  val `Hallands Lan`                               = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Hallands Lan", "SE-N")
  val `Jamtlands Lan`                              = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Jamtlands Lan", "SE-Z")
  val `Jonkopings Lan`                             = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Jonkopings Lan", "SE-F")
  val `Kalmar Lan`                                 = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Kalmar Lan", "SE-H")
  val `Kronobergs Lan`                             = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Kronobergs Lan", "SE-G")
  val `Norrbottens Lan`                            = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Norrbottens Lan", "SE-BD")
  val `Orebro Lan`                                 = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Orebro Lan", "SE-T")
  val `Ostergotlands Lan`                          = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Ostergotlands Lan", "SE-E")
  val `Skane Lan`                                  = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Skane Lan", "SE-M")
  val `Sodermanlands Lan`                          = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Sodermanlands Lan", "SE-D")
  val `Stockholms Lan`                             = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Stockholms Lan", "SE-AB")
  val `Uppsala Lan`                                = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Uppsala Lan", "SE-C")
  val `Varmlands Lan`                              = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Varmlands Lan", "SE-S")
  val `Vasterbottens Lan`                          = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Vasterbottens Lan", "SE-AC")
  val `Vasternorrlands Lan`                        = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Vasternorrlands Lan", "SE-Y")
  val `Vastmanlands Lan`                           = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Vastmanlands Lan", "SE-U")
  val `Vastra Gotaland`                            = new ISOCountrySubdivision(ISOCountry.SWEDEN, "Vastra Gotaland", "SE-O")
  val `Ajdovscina`                                 = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ajdovscina", "SI-001")
  val `Bled`                                       = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Bled", "SI-003")
  val `Bohinj`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Bohinj", "SI-004")
  val `Borovnica`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Borovnica", "SI-005")
  val `Bovec`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Bovec", "SI-006")
  val `Brezice`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Brezice", "SI-009")
  val `Brezovica`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Brezovica", "SI-008")
  val `Celje`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Celje", "SI-011")
  val `Cerknica`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Cerknica", "SI-013")
  val `Cerkno`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Cerkno", "SI-014")
  val `Crensovci`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Crensovci", "SI-015")
  val `Crnomelj`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Crnomelj", "SI-017")
  val `Destrnik`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Destrnik", "SI-018")
  val `Divaca`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Divaca", "SI-019")
  val `Domzale`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Domzale", "SI-023")
  val `Dravograd`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Dravograd", "SI-025")
  val `Gornja Radgona`                             = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Gornja Radgona", "SI-029")
  val `Grosuplje`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Grosuplje", "SI-032")
  val `Hoce-Slivnica`                              = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Hoce-Slivnica", "SI-160")
  val `Horjul`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Horjul", "SI-162")
  val `Hrastnik`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Hrastnik", "SI-034")
  val `Idrija`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Idrija", "SI-036")
  val `Ig`                                         = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ig", "SI-037")
  val `Ilirska Bistrica`                           = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ilirska Bistrica", "SI-038")
  val `Ivancna Gorica`                             = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ivancna Gorica", "SI-039")
  val `Izola-Isola`                                = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Izola-Isola", "SI-040")
  val `Jesenice`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Jesenice", "SI-041")
  val `Kamnik`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kamnik", "SI-043")
  val `Kanal`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kanal", "SI-044")
  val `Kidricevo`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kidricevo", "SI-045")
  val `Kobarid`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kobarid", "SI-046")
  val `Kocevje`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kocevje", "SI-048")
  val `Koper-Capodistria`                          = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Koper-Capodistria", "SI-050")
  val `Kranj`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kranj", "SI-052")
  val `Kranjska Gora`                              = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Kranjska Gora", "SI-053")
  val `Krsko`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Krsko", "SI-054")
  val `Lasko`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Lasko", "SI-057")
  val `Lenart`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Lenart", "SI-058")
  val `Lendava`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Lendava", "SI-059")
  val `Litija`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Litija", "SI-060")
  val `Ljubljana`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ljubljana", "SI-061")
  val `Ljutomer`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ljutomer", "SI-063")
  val `Log-Dragomer`                               = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Log-Dragomer", "SI-208")
  val `Logatec`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Logatec", "SI-064")
  val `Lovrenc na Pohorju`                         = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Lovrenc na Pohorju", "SI-167")
  val `Maribor`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Maribor", "SI-070")
  val `Medvode`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Medvode", "SI-071")
  val `Menges`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Menges", "SI-072")
  val `Metlika`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Metlika", "SI-073")
  val `Mezica`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Mezica", "SI-074")
  val `Miklavz na Dravskem Polju`                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Miklavz na Dravskem Polju", "SI-169")
  val `Miren-Kostanjevica`                         = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Miren-Kostanjevica", "SI-075")
  val `Mislinja`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Mislinja", "SI-076")
  val `Mozirje`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Mozirje", "SI-079")
  val `Murska Sobota`                              = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Murska Sobota", "SI-080")
  val `Muta`                                       = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Muta", "SI-081")
  val `Nova Gorica`                                = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Nova Gorica", "SI-084")
  val `Novo Mesto`                                 = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Novo Mesto", "SI-085")
  val `Odranci`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Odranci", "SI-086")
  val `Oplotnica`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Oplotnica", "SI-171")
  val `Ormoz`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ormoz", "SI-087")
  val `Piran`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Piran", "SI-090")
  val `Pivka`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Pivka", "SI-091")
  val `Poljcane`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Poljcane", "SI-200")
  val `Polzela`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Polzela", "SI-173")
  val `Postojna`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Postojna", "SI-094")
  val `Prebold`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Prebold", "SI-174")
  val `Prevalje`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Prevalje", "SI-175")
  val `Ptuj`                                       = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ptuj", "SI-096")
  val `Racam`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Racam", "SI-098")
  val `Radece`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Radece", "SI-099")
  val `Radenci`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Radenci", "SI-100")
  val `Radlje ob Dravi`                            = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Radlje ob Dravi", "SI-101")
  val `Radovljica`                                 = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Radovljica", "SI-102")
  val `Ravne na Koroskem`                          = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ravne na Koroskem", "SI-103")
  val `Ribnica`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ribnica", "SI-104")
  val `Rogaska Slatina`                            = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Rogaska Slatina", "SI-106")
  val `Ruse`                                       = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ruse", "SI-108")
  val `Sempeter-Vrtojba`                           = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sempeter-Vrtojba", "SI-183")
  val `Sencur`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sencur", "SI-117")
  val `Sentilj`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sentilj", "SI-118")
  val `Sentjur pri Celju`                          = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sentjur pri Celju", "SI-120")
  val `Sevnica`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sevnica", "SI-110")
  val `Sezana`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sezana", "SI-111")
  val `Skofja Loka`                                = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Skofja Loka", "SI-122")
  val `Skofljica`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Skofljica", "SI-123")
  val `Slovenj Gradec`                             = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Slovenj Gradec", "SI-112")
  val `Slovenska Bistrica`                         = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Slovenska Bistrica", "SI-113")
  val `Slovenske Konjice`                          = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Slovenske Konjice", "SI-114")
  val `Sostanj`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Sostanj", "SI-126")
  val `Store`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Store", "SI-127")
  val `Straza`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Straza", "SI-203")
  val `Tolmin`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Tolmin", "SI-128")
  val `Trbovlje`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Trbovlje", "SI-129")
  val `Trebnje`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Trebnje", "SI-130")
  val `Trzic`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Trzic", "SI-131")
  val `Trzin`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Trzin", "SI-186")
  val `Turnisce`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Turnisce", "SI-132")
  val `Velenje`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Velenje", "SI-133")
  val `Vipava`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Vipava", "SI-136")
  val `Vodice`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Vodice", "SI-138")
  val `Vojnik`                                     = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Vojnik", "SI-139")
  val `Vrhnika`                                    = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Vrhnika", "SI-140")
  val `Vuzenica`                                   = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Vuzenica", "SI-141")
  val `Zagorje ob Savi`                            = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Zagorje ob Savi", "SI-142")
  val `Zalec`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Zalec", "SI-190")
  val `Zelezniki`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Zelezniki", "SI-146")
  val `Ziri`                                       = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Ziri", "SI-147")
  val `Zrece`                                      = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Zrece", "SI-144")
  val `Zuzemberk`                                  = new ISOCountrySubdivision(ISOCountry.SLOVENIA, "Zuzemberk", "SI-193")
  val `Banskobystricky kraj`                       = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Banskobystricky kraj", "SK-BC")
  val `Bratislavsky kraj`                          = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Bratislavsky kraj", "SK-BL")
  val `Kosicky kraj`                               = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Kosicky kraj", "SK-KI")
  val `Nitriansky kraj`                            = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Nitriansky kraj", "SK-NI")
  val `Presovsky kraj`                             = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Presovsky kraj", "SK-PV")
  val `Trenciansky kraj`                           = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Trenciansky kraj", "SK-TC")
  val `Trnavsky kraj`                              = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Trnavsky kraj", "SK-TA")
  val `Zilinsky kraj`                              = new ISOCountrySubdivision(ISOCountry.SLOVAKIA, "Zilinsky kraj", "SK-ZI")
  val `Acquaviva`                                  = new ISOCountrySubdivision(ISOCountry.SAN_MARINO, "Acquaviva", "SM-01")
  val `Chiesanuova`                                = new ISOCountrySubdivision(ISOCountry.SAN_MARINO, "Chiesanuova", "SM-02")
  val `San Marino`                                 = new ISOCountrySubdivision(ISOCountry.SAN_MARINO, "San Marino", "SM-07")
  val `Serravalle`                                 = new ISOCountrySubdivision(ISOCountry.SAN_MARINO, "Serravalle", "SM-09")
  val `Avtonomna Respublika Krym`                  = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Avtonomna Respublika Krym", "UA-43")
  val `Cherkas'ka Oblast'`                         = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Cherkas'ka Oblast'", "UA-71")
  val `Chernihivs'ka Oblast'`                      = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Chernihivs'ka Oblast'", "UA-74")
  val `Chernivets'ka Oblast'`                      = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Chernivets'ka Oblast'", "UA-77")
  val `Dnipropetrovs'ka Oblast'`                   = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Dnipropetrovs'ka Oblast'", "UA-12")
  val `Donets'ka Oblast'`                          = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Donets'ka Oblast'", "UA-14")
  val `Ivano-Frankivs'ka Oblast'`                  = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Ivano-Frankivs'ka Oblast'", "UA-26")
  val `Kharkivs'ka Oblast'`                        = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Kharkivs'ka Oblast'", "UA-63")
  val `Khersons'ka Oblast'`                        = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Khersons'ka Oblast'", "UA-65")
  val `Khmel'nyts'ka Oblast'`                      = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Khmel'nyts'ka Oblast'", "UA-68")
  val `Kirovohrads'ka Oblast'`                     = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Kirovohrads'ka Oblast'", "UA-35")
  val `Kyiv`                                       = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Kyiv", "UA-30")
  val `Kyivs'ka Oblast'`                           = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Kyivs'ka Oblast'", "UA-32")
  val `L'vivs'ka Oblast'`                          = new ISOCountrySubdivision(ISOCountry.UKRAINE, "L'vivs'ka Oblast'", "UA-46")
  val `Luhans'ka Oblast'`                          = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Luhans'ka Oblast'", "UA-09")
  val `Mykolaivs'ka Oblast'`                       = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Mykolaivs'ka Oblast'", "UA-48")
  val `Odes'ka Oblast'`                            = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Odes'ka Oblast'", "UA-51")
  val `Poltavs'ka Oblast'`                         = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Poltavs'ka Oblast'", "UA-53")
  val `Rivnens'ka Oblast'`                         = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Rivnens'ka Oblast'", "UA-56")
  val `Sevastopol'`                                = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Sevastopol'", "UA-40")
  val `Sums'ka Oblast'`                            = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Sums'ka Oblast'", "UA-59")
  val `Ternopil's'ka Oblast'`                      = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Ternopil's'ka Oblast'", "UA-61")
  val `Vinnyts'ka Oblast'`                         = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Vinnyts'ka Oblast'", "UA-05")
  val `Volyns'ka Oblast'`                          = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Volyns'ka Oblast'", "UA-07")
  val `Zakarpats'ka Oblast'`                       = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Zakarpats'ka Oblast'", "UA-21")
  val `Zaporiz'ka Oblast'`                         = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Zaporiz'ka Oblast'", "UA-23")
  val `Zhytomyrs'ka Oblast'`                       = new ISOCountrySubdivision(ISOCountry.UKRAINE, "Zhytomyrs'ka Oblast'", "UA-18")
  // format: ON
}
object ISOCountrySubdivisionEurope extends ISOCountrySubdivisionEurope
