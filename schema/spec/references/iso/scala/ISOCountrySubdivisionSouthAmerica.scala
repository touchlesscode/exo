/*
 * Copyright 2017 Vitor S. Vieira
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.vitorsvieira.iso

/**
 * ISO 3166-2 is part of the ISO 3166 standard
 * and defines codes for identifying the principal subdivisions
 * (e.g., provinces or states) of all countries coded in ISO 3166-1.
 * The official name of the standard is
 * "Codes for the representation of names of countries and their subdivisions â€“ Part 2: Country subdivision code."
 */
trait ISOCountrySubdivisionSouthAmerica extends CountrySubdivision {
  // format: OFF
  val `Buenos Aires`                             = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Buenos Aires", "AR-B")
  val `Catamarca`                                = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Catamarca", "AR-K")
  val `Chaco`                                    = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Chaco", "AR-H")
  val `Chubut`                                   = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Chubut", "AR-U")
  val `Ciudad Autonoma de Buenos Aires`          = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Ciudad Autonoma de Buenos Aires", "AR-C")
  val `Cordoba - Argentina`                      = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Cordoba", "AR-X")
  val `Corrientes`                               = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Corrientes", "AR-W")
  val `Entre Rios`                               = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Entre Rios", "AR-E")
  val `Formosa`                                  = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Formosa", "AR-P")
  val `Jujuy`                                    = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Jujuy", "AR-Y")
  val `La Pampa`                                 = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "La Pampa", "AR-L")
  val `La Rioja - Argentina`                     = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "La Rioja", "AR-F")
  val `Mendoza`                                  = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Mendoza", "AR-M")
  val `Misiones - Argentina`                     = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Misiones", "AR-N")
  val `Neuquen`                                  = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Neuquen", "AR-Q")
  val `Rio Negro - Argentina`                    = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Rio Negro", "AR-R")
  val `Salta`                                    = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Salta", "AR-A")
  val `San Juan - Argentina`                     = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "San Juan", "AR-J")
  val `San Luis`                                 = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "San Luis", "AR-D")
  val `Santa Cruz - Argentina`                   = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Santa Cruz", "AR-Z")
  val `Santa Fe`                                 = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Santa Fe", "AR-S")
  val `Santiago del Estero`                      = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Santiago del Estero", "AR-G")
  val `Tierra del Fuego`                         = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Tierra del Fuego", "AR-V")
  val `Tucuman`                                  = new ISOCountrySubdivision(ISOCountry.ARGENTINA, "Tucuman", "AR-T")
  val `Chuquisaca`                               = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Chuquisaca", "BO-H")
  val `Cochabamba`                               = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Cochabamba", "BO-C")
  val `El Beni`                                  = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "El Beni", "BO-B")
  val `La Paz - Bolivia`                         = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "La Paz", "BO-L")
  val `Oruro`                                    = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Oruro", "BO-O")
  val `Pando`                                    = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Pando", "BO-N")
  val `Potosi`                                   = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Potosi", "BO-P")
  val `Santa Cruz - Bolivia`                     = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Santa Cruz", "BO-S")
  val `Tarija`                                   = new ISOCountrySubdivision(ISOCountry.BOLIVIA, "Tarija", "BO-T")
  val `Acre`                                     = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Acre", "BR-AC")
  val `Alagoas`                                  = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Alagoas", "BR-AL")
  val `Amapa`                                    = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Amapa", "BR-AP")
  val `Amazonas - Brazil`                        = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Amazonas", "BR-AM")
  val `Bahia`                                    = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Bahia", "BR-BA")
  val `Ceara`                                    = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Ceara", "BR-CE")
  val `Distrito Federal`                         = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Distrito Federal", "BR-DF")
  val `Espirito Santo`                           = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Espirito Santo", "BR-ES")
  val `Goias`                                    = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Goias", "BR-GO")
  val `Maranhao`                                 = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Maranhao", "BR-MA")
  val `Mato Grosso`                              = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Mato Grosso", "BR-MT")
  val `Mato Grosso do Sul`                       = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Mato Grosso do Sul", "BR-MS")
  val `Minas Gerais`                             = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Minas Gerais", "BR-MG")
  val `Para - Brazil`                            = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Para", "BR-PA")
  val `Paraiba`                                  = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Paraiba", "BR-PB")
  val `Parana`                                   = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Parana", "BR-PR")
  val `Pernambuco`                               = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Pernambuco", "BR-PE")
  val `Piaui`                                    = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Piaui", "BR-PI")
  val `Rio Grande do Norte`                      = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Rio Grande do Norte", "BR-RN")
  val `Rio Grande do Sul`                        = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Rio Grande do Sul", "BR-RS")
  val `Rio de Janeiro`                           = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Rio de Janeiro", "BR-RJ")
  val `Rondonia`                                 = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Rondonia", "BR-RO")
  val `Roraima`                                  = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Roraima", "BR-RR")
  val `Santa Catarina`                           = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Santa Catarina", "BR-SC")
  val `Sao Paulo`                                = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Sao Paulo", "BR-SP")
  val `Sergipe`                                  = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Sergipe", "BR-SE")
  val `Tocantins`                                = new ISOCountrySubdivision(ISOCountry.BRAZIL, "Tocantins", "BR-TO")
  val `Antofagasta`                              = new ISOCountrySubdivision(ISOCountry.CHILE, "Antofagasta", "CL-AN")
  val `Araucania`                                = new ISOCountrySubdivision(ISOCountry.CHILE, "Araucania", "CL-AR")
  val `Arica y Parinacota`                       = new ISOCountrySubdivision(ISOCountry.CHILE, "Arica y Parinacota", "CL-AP")
  val `Atacama`                                  = new ISOCountrySubdivision(ISOCountry.CHILE, "Atacama", "CL-AT")
  val `Aysen`                                    = new ISOCountrySubdivision(ISOCountry.CHILE, "Aysen", "CL-AI")
  val `Biobio`                                   = new ISOCountrySubdivision(ISOCountry.CHILE, "Biobio", "CL-BI")
  val `Coquimbo`                                 = new ISOCountrySubdivision(ISOCountry.CHILE, "Coquimbo", "CL-CO")
  val `Libertador General Bernardo O'Higgins`    = new ISOCountrySubdivision(ISOCountry.CHILE, "Libertador General Bernardo O'Higgins", "CL-LI")
  val `Los Lagos`                                = new ISOCountrySubdivision(ISOCountry.CHILE, "Los Lagos", "CL-LL")
  val `Los Rios - Chile`                         = new ISOCountrySubdivision(ISOCountry.CHILE, "Los Rios", "CL-LR")
  val `Magallanes`                               = new ISOCountrySubdivision(ISOCountry.CHILE, "Magallanes", "CL-MA")
  val `Maule`                                    = new ISOCountrySubdivision(ISOCountry.CHILE, "Maule", "CL-ML")
  val `Region Metropolitana de Santiago`         = new ISOCountrySubdivision(ISOCountry.CHILE, "Region Metropolitana de Santiago", "CL-RM")
  val `Tarapaca`                                 = new ISOCountrySubdivision(ISOCountry.CHILE, "Tarapaca", "CL-TA")
  val `Valparaiso`                               = new ISOCountrySubdivision(ISOCountry.CHILE, "Valparaiso", "CL-VS")
  val `Amazonas - Colombia`                      = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Amazonas", "CO-AMA")
  val `Antioquia`                                = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Antioquia", "CO-ANT")
  val `Arauca`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Arauca", "CO-ARA")
  val `Atlantico`                                = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Atlantico", "CO-ATL")
  val `Bolivar - Colombia`                       = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Bolivar", "CO-BOL")
  val `Boyaca`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Boyaca", "CO-BOY")
  val `Caldas`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Caldas", "CO-CAL")
  val `Caqueta`                                  = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Caqueta", "CO-CAQ")
  val `Casanare`                                 = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Casanare", "CO-CAS")
  val `Cauca`                                    = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Cauca", "CO-CAU")
  val `Cesar`                                    = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Cesar", "CO-CES")
  val `Choco`                                    = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Choco", "CO-CHO")
  val `Cordoba`                                  = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Cordoba", "CO-COR")
  val `Cundinamarca`                             = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Cundinamarca", "CO-CUN")
  val `Distrito Capital de Bogota`               = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Distrito Capital de Bogota", "CO-DC")
  val `Guainia`                                  = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Guainia", "CO-GUA")
  val `Guaviare`                                 = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Guaviare", "CO-GUV")
  val `Huila`                                    = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Huila", "CO-HUI")
  val `La Guajira`                               = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "La Guajira", "CO-LAG")
  val `Magdalena`                                = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Magdalena", "CO-MAG")
  val `Meta`                                     = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Meta", "CO-MET")
  val `Narino`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Narino", "CO-NAR")
  val `Norte de Santander`                       = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Norte de Santander", "CO-NSA")
  val `Putumayo`                                 = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Putumayo", "CO-PUT")
  val `Quindio`                                  = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Quindio", "CO-QUI")
  val `Risaralda`                                = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Risaralda", "CO-RIS")
  val `San Andres, Providencia y Santa Catalina` = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "San Andres, Providencia y Santa Catalina", "CO-SAP")
  val `Santander`                                = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Santander", "CO-SAN")
  val `Sucre - Colombia`                         = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Sucre", "CO-SUC")
  val `Tolima`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Tolima", "CO-TOL")
  val `Valle del Cauca`                          = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Valle del Cauca", "CO-VAC")
  val `Vaupes`                                   = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Vaupes", "CO-VAU")
  val `Vichada`                                  = new ISOCountrySubdivision(ISOCountry.COLOMBIA, "Vichada", "CO-VID")
  val `Azuay`                                    = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Azuay", "EC-A")
  val `Bolivar - Ecuador`                        = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Bolivar", "EC-B")
  val `Canar`                                    = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Canar", "EC-F")
  val `Carchi`                                   = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Carchi", "EC-C")
  val `Chimborazo`                               = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Chimborazo", "EC-H")
  val `Cotopaxi`                                 = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Cotopaxi", "EC-X")
  val `El Oro`                                   = new ISOCountrySubdivision(ISOCountry.ECUADOR, "El Oro", "EC-O")
  val `Esmeraldas`                               = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Esmeraldas", "EC-E")
  val `Galapagos`                                = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Galapagos", "EC-W")
  val `Guayas`                                   = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Guayas", "EC-G")
  val `Imbabura`                                 = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Imbabura", "EC-I")
  val `Loja`                                     = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Loja", "EC-L")
  val `Los Rios`                                 = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Los Rios", "EC-R")
  val `Manabi`                                   = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Manabi", "EC-M")
  val `Morona-Santiago`                          = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Morona-Santiago", "EC-S")
  val `Napo`                                     = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Napo", "EC-N")
  val `Orellana`                                 = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Orellana", "EC-D")
  val `Pastaza`                                  = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Pastaza", "EC-Y")
  val `Pichincha`                                = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Pichincha", "EC-P")
  val `Santa Elena`                              = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Santa Elena", "EC-SE")
  val `Sucumbios`                                = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Sucumbios", "EC-U")
  val `Tungurahua`                               = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Tungurahua", "EC-T")
  val `Zamora-Chinchipe`                         = new ISOCountrySubdivision(ISOCountry.ECUADOR, "Zamora-Chinchipe", "EC-Z")
  val `Cuyuni-Mazaruni`                          = new ISOCountrySubdivision(ISOCountry.GUYANA, "Cuyuni-Mazaruni", "GY-CU")
  val `Demerara-Mahaica`                         = new ISOCountrySubdivision(ISOCountry.GUYANA, "Demerara-Mahaica", "GY-DE")
  val `East Berbice-Corentyne`                   = new ISOCountrySubdivision(ISOCountry.GUYANA, "East Berbice-Corentyne", "GY-EB")
  val `Essequibo Islands-West Demerara`          = new ISOCountrySubdivision(ISOCountry.GUYANA, "Essequibo Islands-West Demerara", "GY-ES")
  val `Mahaica-Berbice`                          = new ISOCountrySubdivision(ISOCountry.GUYANA, "Mahaica-Berbice", "GY-MA")
  val `Pomeroon-Supenaam`                        = new ISOCountrySubdivision(ISOCountry.GUYANA, "Pomeroon-Supenaam", "GY-PM")
  val `Upper Demerara-Berbice`                   = new ISOCountrySubdivision(ISOCountry.GUYANA, "Upper Demerara-Berbice", "GY-UD")
  val `Amazonas - Peru`                          = new ISOCountrySubdivision(ISOCountry.PERU, "Amazonas", "PE-AMA")
  val `Ancash`                                   = new ISOCountrySubdivision(ISOCountry.PERU, "Ancash", "PE-ANC")
  val `Apurimac`                                 = new ISOCountrySubdivision(ISOCountry.PERU, "Apurimac", "PE-APU")
  val `Arequipa`                                 = new ISOCountrySubdivision(ISOCountry.PERU, "Arequipa", "PE-ARE")
  val `Ayacucho`                                 = new ISOCountrySubdivision(ISOCountry.PERU, "Ayacucho", "PE-AYA")
  val `Cajamarca`                                = new ISOCountrySubdivision(ISOCountry.PERU, "Cajamarca", "PE-CAJ")
  val `Callao`                                   = new ISOCountrySubdivision(ISOCountry.PERU, "Callao", "PE-CAL")
  val `Cusco`                                    = new ISOCountrySubdivision(ISOCountry.PERU, "Cusco", "PE-CUS")
  val `Huancavelica`                             = new ISOCountrySubdivision(ISOCountry.PERU, "Huancavelica", "PE-HUV")
  val `Huanuco`                                  = new ISOCountrySubdivision(ISOCountry.PERU, "Huanuco", "PE-HUC")
  val `Ica`                                      = new ISOCountrySubdivision(ISOCountry.PERU, "Ica", "PE-ICA")
  val `Junin`                                    = new ISOCountrySubdivision(ISOCountry.PERU, "Junin", "PE-JUN")
  val `La Libertad - Peru`                       = new ISOCountrySubdivision(ISOCountry.PERU, "La Libertad", "PE-LAL")
  val `Lambayeque`                               = new ISOCountrySubdivision(ISOCountry.PERU, "Lambayeque", "PE-LAM")
  val `Lima`                                     = new ISOCountrySubdivision(ISOCountry.PERU, "Lima", "PE-LIM")
  val `Loreto`                                   = new ISOCountrySubdivision(ISOCountry.PERU, "Loreto", "PE-LOR")
  val `Madre de Dios`                            = new ISOCountrySubdivision(ISOCountry.PERU, "Madre de Dios", "PE-MDD")
  val `Moquegua`                                 = new ISOCountrySubdivision(ISOCountry.PERU, "Moquegua", "PE-MOQ")
  val `Pasco`                                    = new ISOCountrySubdivision(ISOCountry.PERU, "Pasco", "PE-PAS")
  val `Piura`                                    = new ISOCountrySubdivision(ISOCountry.PERU, "Piura", "PE-PIU")
  val `Puno`                                     = new ISOCountrySubdivision(ISOCountry.PERU, "Puno", "PE-PUN")
  val `San Martin`                               = new ISOCountrySubdivision(ISOCountry.PERU, "San Martin", "PE-SAM")
  val `Tacna`                                    = new ISOCountrySubdivision(ISOCountry.PERU, "Tacna", "PE-TAC")
  val `Tumbes`                                   = new ISOCountrySubdivision(ISOCountry.PERU, "Tumbes", "PE-TUM")
  val `Ucayali`                                  = new ISOCountrySubdivision(ISOCountry.PERU, "Ucayali", "PE-UCA")
  val `Alto Paraguay`                            = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Alto Paraguay", "PY-16")
  val `Alto Parana`                              = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Alto Parana", "PY-10")
  val `Amambay`                                  = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Amambay", "PY-13")
  val `Asuncion`                                 = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Asuncion", "PY-ASU")
  val `Boqueron`                                 = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Boqueron", "PY-19")
  val `Caaguazu`                                 = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Caaguazu", "PY-5")
  val `Caazapa`                                  = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Caazapa", "PY-6")
  val `Canindeyu`                                = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Canindeyu", "PY-14")
  val `Central Paraguay`                         = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Central", "PY-11")
  val `Concepcion`                               = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Concepcion", "PY-1")
  val `Cordillera`                               = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Cordillera", "PY-3")
  val `Guaira`                                   = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Guaira", "PY-4")
  val `Itapua`                                   = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Itapua", "PY-7")
  val `Misiones`                                 = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Misiones", "PY-8")
  val `Neembucu`                                 = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Neembucu", "PY-12")
  val `Paraguari`                                = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Paraguari", "PY-9")
  val `Presidente Hayes`                         = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "Presidente Hayes", "PY-15")
  val `San Pedro`                                = new ISOCountrySubdivision(ISOCountry.PARAGUAY, "San Pedro", "PY-2")
  val `Brokopondo`                               = new ISOCountrySubdivision(ISOCountry.SURINAME, "Brokopondo", "SR-BR")
  val `Commewijne`                               = new ISOCountrySubdivision(ISOCountry.SURINAME, "Commewijne", "SR-CM")
  val `Coronie`                                  = new ISOCountrySubdivision(ISOCountry.SURINAME, "Coronie", "SR-CR")
  val `Marowijne`                                = new ISOCountrySubdivision(ISOCountry.SURINAME, "Marowijne", "SR-MA")
  val `Nickerie`                                 = new ISOCountrySubdivision(ISOCountry.SURINAME, "Nickerie", "SR-NI")
  val `Para`                                     = new ISOCountrySubdivision(ISOCountry.SURINAME, "Para", "SR-PR")
  val `Paramaribo`                               = new ISOCountrySubdivision(ISOCountry.SURINAME, "Paramaribo", "SR-PM")
  val `Saramacca`                                = new ISOCountrySubdivision(ISOCountry.SURINAME, "Saramacca", "SR-SA")
  val `Wanica`                                   = new ISOCountrySubdivision(ISOCountry.SURINAME, "Wanica", "SR-WA")
  val `Amazonas - Venezuela`                     = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Amazonas", "VE-Z")
  val `Anzoategui`                               = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Anzoategui", "VE-B")
  val `Apure`                                    = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Apure", "VE-C")
  val `Aragua`                                   = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Aragua", "VE-D")
  val `Barinas`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Barinas", "VE-E")
  val `Bolivar`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Bolivar", "VE-F")
  val `Carabobo`                                 = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Carabobo", "VE-G")
  val `Cojedes`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Cojedes", "VE-H")
  val `Delta Amacuro`                            = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Delta Amacuro", "VE-Y")
  val `Distrito Federal - Venezuela`             = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Distrito Federal", "VE-A")
  val `Falcon`                                   = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Falcon", "VE-I")
  val `Guarico`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Guarico", "VE-J")
  val `Lara`                                     = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Lara", "VE-K")
  val `Merida`                                   = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Merida", "VE-L")
  val `Miranda`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Miranda", "VE-M")
  val `Monagas`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Monagas", "VE-N")
  val `Nueva Esparta`                            = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Nueva Esparta", "VE-O")
  val `Portuguesa`                               = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Portuguesa", "VE-P")
  val `Sucre`                                    = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Sucre", "VE-R")
  val `Tachira`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Tachira", "VE-S")
  val `Trujillo`                                 = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Trujillo", "VE-T")
  val `Vargas`                                   = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Vargas", "VE-X")
  val `Yaracuy`                                  = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Yaracuy", "VE-U")
  val `Zulia`                                    = new ISOCountrySubdivision(ISOCountry.VENEZUELA, "Zulia", "VE-V")
  val `Artigas`                                  = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Artigas", "UY-AR")
  val `Canelones`                                = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Canelones", "UY-CA")
  val `Cerro Largo`                              = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Cerro Largo", "UY-CL")
  val `Colonia`                                  = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Colonia", "UY-CO")
  val `Durazno`                                  = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Durazno", "UY-DU")
  val `Flores`                                   = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Flores", "UY-FS")
  val `Florida - Uruguay`                        = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Florida", "UY-FD")
  val `Lavalleja`                                = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Lavalleja", "UY-LA")
  val `Maldonado`                                = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Maldonado", "UY-MA")
  val `Montevideo`                               = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Montevideo", "UY-MO")
  val `Paysandu`                                 = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Paysandu", "UY-PA")
  val `Rio Negro`                                = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Rio Negro", "UY-RN")
  val `Rivera`                                   = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Rivera", "UY-RV")
  val `Rocha`                                    = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Rocha", "UY-RO")
  val `Salto`                                    = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Salto", "UY-SA")
  val `San Jose`                                 = new ISOCountrySubdivision(ISOCountry.URUGUAY, "San Jose", "UY-SJ")
  val `Soriano`                                  = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Soriano", "UY-SO")
  val `Tacuarembo`                               = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Tacuarembo", "UY-TA")
  val `Treinta y Tres`                           = new ISOCountrySubdivision(ISOCountry.URUGUAY, "Treinta y Tres", "UY-TT")
  // format: ON
}
object ISOCountrySubdivisionSouthAmerica extends ISOCountrySubdivisionSouthAmerica
