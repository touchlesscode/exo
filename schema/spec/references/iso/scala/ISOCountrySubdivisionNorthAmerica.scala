/*
 * Copyright 2017 Vitor S. Vieira
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.vitorsvieira.iso

/**
 * ISO 3166-2 is part of the ISO 3166 standard
 * and defines codes for identifying the principal subdivisions
 * (e.g., provinces or states) of all countries coded in ISO 3166-1.
 * The official name of the standard is
 * "Codes for the representation of names of countries and their subdivisions â€“ Part 2: Country subdivision code."
 */
trait ISOCountrySubdivisionNorthAmerica extends CountrySubdivision {
  // format: OFF
    val `Saint John Antigua and Barbuda`             = new ISOCountrySubdivision(ISOCountry.ANTIGUA_AND_BARBUDA, "Saint John", "AG-04")
    val `Saint Mary Antigua and Barbuda`             = new ISOCountrySubdivision(ISOCountry.ANTIGUA_AND_BARBUDA, "Saint Mary", "AG-05")
    val `Saint Paul Antigua and Barbuda`             = new ISOCountrySubdivision(ISOCountry.ANTIGUA_AND_BARBUDA, "Saint Paul", "AG-06")
    val `Christ Church`                              = new ISOCountrySubdivision(ISOCountry.BARBADOS, "Christ Church", "BB-01")
    val `Saint James - Barbados`                     = new ISOCountrySubdivision(ISOCountry.BARBADOS, "Saint James", "BB-04")
    val `Saint Joseph - Barbados`                    = new ISOCountrySubdivision(ISOCountry.BARBADOS, "Saint Joseph", "BB-06")
    val `Saint Michael`                              = new ISOCountrySubdivision(ISOCountry.BARBADOS, "Saint Michael", "BB-08")
    val `Saint Peter`                                = new ISOCountrySubdivision(ISOCountry.BARBADOS, "Saint Peter", "BB-09")
    val `Bonaire`                                    = new ISOCountrySubdivision(ISOCountry.BONAIRE, "Bonaire", "BQ-BO")
    val `Saba`                                       = new ISOCountrySubdivision(ISOCountry.BONAIRE, "Saba", "BQ-SA")
    val `Sint Eustatius`                             = new ISOCountrySubdivision(ISOCountry.BONAIRE, "Sint Eustatius", "BQ-SE")
    val `Freeport`                                   = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Freeport", "BS-FP")
    val `Fresh Creek`                                = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Fresh Creek", "BS-FC")
    val `Harbour Island`                             = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Harbour Island", "BS-HI")
    val `High Rock`                                  = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "High Rock", "BS-HR")
    val `Long Island`                                = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Long Island", "BS-LI")
    val `Marsh Harbour`                              = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Marsh Harbour", "BS-MH")
    val `New Providence`                             = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "New Providence", "BS-NP")
    val `Rock Sound`                                 = new ISOCountrySubdivision(ISOCountry.BAHAMAS, "Rock Sound", "BS-RS")
    val `Belize`                                     = new ISOCountrySubdivision(ISOCountry.BELIZE, "Belize", "BZ-BZ")
    val `Cayo`                                       = new ISOCountrySubdivision(ISOCountry.BELIZE, "Cayo", "BZ-CY")
    val `Corozal`                                    = new ISOCountrySubdivision(ISOCountry.BELIZE, "Corozal", "BZ-CZL")
    val `Orange Walk`                                = new ISOCountrySubdivision(ISOCountry.BELIZE, "Orange Walk", "BZ-OW")
    val `Stann Creek`                                = new ISOCountrySubdivision(ISOCountry.BELIZE, "Stann Creek", "BZ-SC")
    val `Toledo`                                     = new ISOCountrySubdivision(ISOCountry.BELIZE, "Toledo", "BZ-TOL")
    val `Alberta`                                    = new ISOCountrySubdivision(ISOCountry.CANADA, "Alberta", "CA-AB")
    val `British Columbia`                           = new ISOCountrySubdivision(ISOCountry.CANADA, "British Columbia", "CA-BC")
    val `Manitoba`                                   = new ISOCountrySubdivision(ISOCountry.CANADA, "Manitoba", "CA-MB")
    val `New Brunswick`                              = new ISOCountrySubdivision(ISOCountry.CANADA, "New Brunswick", "CA-NB")
    val `Newfoundland and Labrador`                  = new ISOCountrySubdivision(ISOCountry.CANADA, "Newfoundland and Labrador", "CA-NL")
    val `Northwest Territories`                      = new ISOCountrySubdivision(ISOCountry.CANADA, "Northwest Territories", "CA-NT")
    val `Nova Scotia`                                = new ISOCountrySubdivision(ISOCountry.CANADA, "Nova Scotia", "CA-NS")
    val `Nunavut`                                    = new ISOCountrySubdivision(ISOCountry.CANADA, "Nunavut", "CA-NU")
    val `Ontario`                                    = new ISOCountrySubdivision(ISOCountry.CANADA, "Ontario", "CA-ON")
    val `Prince Edward Island`                       = new ISOCountrySubdivision(ISOCountry.CANADA, "Prince Edward Island", "CA-PE")
    val `Quebec`                                     = new ISOCountrySubdivision(ISOCountry.CANADA, "Quebec", "CA-QC")
    val `Saskatchewan`                               = new ISOCountrySubdivision(ISOCountry.CANADA, "Saskatchewan", "CA-SK")
    val `Yukon`                                      = new ISOCountrySubdivision(ISOCountry.CANADA, "Yukon", "CA-YT")
    val `Alajuela`                                   = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Alajuela", "CR-A")
    val `Cartago`                                    = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Cartago", "CR-C")
    val `Guanacaste`                                 = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Guanacaste", "CR-G")
    val `Heredia`                                    = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Heredia", "CR-H")
    val `Limon`                                      = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Limon", "CR-L")
    val `Puntarenas`                                 = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "Puntarenas", "CR-P")
    val `San Jose - Costa Rica`                      = new ISOCountrySubdivision(ISOCountry.COSTA_RICA, "San Jose", "CR-SJ")
    val `Artemisa`                                   = new ISOCountrySubdivision(ISOCountry.CUBA, "Artemisa", "CU-15")
    val `Camaguey`                                   = new ISOCountrySubdivision(ISOCountry.CUBA, "Camaguey", "CU-09")
    val `Ciego de Avila`                             = new ISOCountrySubdivision(ISOCountry.CUBA, "Ciego de Avila", "CU-08")
    val `Cienfuegos`                                 = new ISOCountrySubdivision(ISOCountry.CUBA, "Cienfuegos", "CU-06")
    val `Granma`                                     = new ISOCountrySubdivision(ISOCountry.CUBA, "Granma", "CU-12")
    val `Guantanamo`                                 = new ISOCountrySubdivision(ISOCountry.CUBA, "Guantanamo", "CU-14")
    val `Holguin`                                    = new ISOCountrySubdivision(ISOCountry.CUBA, "Holguin", "CU-11")
    val `Isla de la Juventud`                        = new ISOCountrySubdivision(ISOCountry.CUBA, "Isla de la Juventud", "CU-99")
    val `La Habana`                                  = new ISOCountrySubdivision(ISOCountry.CUBA, "La Habana", "CU-03")
    val `Las Tunas`                                  = new ISOCountrySubdivision(ISOCountry.CUBA, "Las Tunas", "CU-10")
    val `Matanzas`                                   = new ISOCountrySubdivision(ISOCountry.CUBA, "Matanzas", "CU-04")
    val `Mayabeque`                                  = new ISOCountrySubdivision(ISOCountry.CUBA, "Mayabeque", "CU-16")
    val `Pinar del Rio`                              = new ISOCountrySubdivision(ISOCountry.CUBA, "Pinar del Rio", "CU-01")
    val `Sancti Spiritus`                            = new ISOCountrySubdivision(ISOCountry.CUBA, "Sancti Spiritus", "CU-07")
    val `Santiago de Cuba`                           = new ISOCountrySubdivision(ISOCountry.CUBA, "Santiago de Cuba", "CU-13")
    val `Villa Clara`                                = new ISOCountrySubdivision(ISOCountry.CUBA, "Villa Clara", "CU-05")
    val `Saint Andrew - Dominica`                    = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Andrew", "DM-02")
    val `Saint David - Dominica`                     = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint David", "DM-03")
    val `Saint George - Dominica`                    = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint George", "DM-04")
    val `Saint John - Dominica`                      = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint John", "DM-05")
    val `Saint Joseph`                               = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Joseph", "DM-06")
    val `Saint Luke`                                 = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Luke", "DM-07")
    val `Saint Mark - Dominica`                      = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Mark", "DM-08")
    val `Saint Patrick - Dominica`                   = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Patrick", "DM-09")
    val `Saint Paul`                                 = new ISOCountrySubdivision(ISOCountry.DOMINICA, "Saint Paul", "DM-10")
    val `Azua`                                       = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Azua", "DO-02")
    val `Baoruco`                                    = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Baoruco", "DO-03")
    val `Barahona`                                   = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Barahona", "DO-04")
    val `Dajabon`                                    = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Dajabon", "DO-05")
    val `Distrito Nacional`                          = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Distrito Nacional", "DO-01")
    val `Duarte`                                     = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Duarte", "DO-06")
    val `El Seibo`                                   = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "El Seibo", "DO-08")
    val `Elias Pina`                                 = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Elias Pina", "DO-07")
    val `Espaillat`                                  = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Espaillat", "DO-09")
    val `Hato Mayor`                                 = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Hato Mayor", "DO-30")
    val `Independencia`                              = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Independencia", "DO-10")
    val `La Altagracia`                              = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "La Altagracia", "DO-11")
    val `La Romana`                                  = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "La Romana", "DO-12")
    val `La Vega`                                    = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "La Vega", "DO-13")
    val `Maria Trinidad Sanchez`                     = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Maria Trinidad Sanchez", "DO-14")
    val `Monsenor Nouel`                             = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Monsenor Nouel", "DO-28")
    val `Monte Cristi`                               = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Monte Cristi", "DO-15")
    val `Monte Plata`                                = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Monte Plata", "DO-29")
    val `Pedernales`                                 = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Pedernales", "DO-16")
    val `Peravia`                                    = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Peravia", "DO-17")
    val `Puerto Plata`                               = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Puerto Plata", "DO-18")
    val `Salcedo`                                    = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Salcedo", "DO-19")
    val `Samana`                                     = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Samana", "DO-20")
    val `San Cristobal`                              = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "San Cristobal", "DO-21")
    val `San Juan`                                   = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "San Juan", "DO-22")
    val `San Pedro De Macoris`                       = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "San Pedro De Macoris", "DO-23")
    val `Sanchez Ramirez`                            = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Sanchez Ramirez", "DO-24")
    val `Santiago`                                   = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Santiago", "DO-25")
    val `Santiago Rodriguez`                         = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Santiago Rodriguez", "DO-26")
    val `Valverde`                                   = new ISOCountrySubdivision(ISOCountry.DOMINICAN_REPUBLIC, "Valverde", "DO-27")
    val `Saint Andrew - Grenada`                     = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint Andrew", "GD-01")
    val `Saint David`                                = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint David", "GD-02")
    val `Saint George - Grenada`                     = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint George", "GD-03")
    val `Saint John`                                 = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint John", "GD-04")
    val `Saint Mark`                                 = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint Mark", "GD-05")
    val `Saint Patrick`                              = new ISOCountrySubdivision(ISOCountry.GRENADA, "Saint Patrick", "GD-06")
    val `Kommune Kujalleq`                           = new ISOCountrySubdivision(ISOCountry.GREENLAND, "Kommune Kujalleq", "GL-KU")
    val `Kommuneqarfik Sermersooq`                   = new ISOCountrySubdivision(ISOCountry.GREENLAND, "Kommuneqarfik Sermersooq", "GL-SM")
    val `Qaasuitsup Kommunia`                        = new ISOCountrySubdivision(ISOCountry.GREENLAND, "Qaasuitsup Kommunia", "GL-QA")
    val `Qeqqata Kommunia`                           = new ISOCountrySubdivision(ISOCountry.GREENLAND, "Qeqqata Kommunia", "GL-QE")
    val `Alta Verapaz`                               = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Alta Verapaz", "GT-AV")
    val `Baja Verapaz`                               = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Baja Verapaz", "GT-BV")
    val `Chimaltenango`                              = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Chimaltenango", "GT-CM")
    val `Chiquimula`                                 = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Chiquimula", "GT-CQ")
    val `El Progreso`                                = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "El Progreso", "GT-PR")
    val `Escuintla`                                  = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Escuintla", "GT-ES")
    val `Guatemala`                                  = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Guatemala", "GT-GU")
    val `Huehuetenango`                              = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Huehuetenango", "GT-HU")
    val `Izabal`                                     = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Izabal", "GT-IZ")
    val `Jalapa`                                     = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Jalapa", "GT-JA")
    val `Jutiapa`                                    = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Jutiapa", "GT-JU")
    val `Peten`                                      = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Peten", "GT-PE")
    val `Quetzaltenango`                             = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Quetzaltenango", "GT-QZ")
    val `Quiche`                                     = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Quiche", "GT-QC")
    val `Retalhuleu`                                 = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Retalhuleu", "GT-RE")
    val `Sacatepequez`                               = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Sacatepequez", "GT-SA")
    val `San Marcos`                                 = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "San Marcos", "GT-SM")
    val `Santa Rosa`                                 = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Santa Rosa", "GT-SR")
    val `Solola`                                     = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Solola", "GT-SO")
    val `Suchitepequez`                              = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Suchitepequez", "GT-SU")
    val `Totonicapan`                                = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Totonicapan", "GT-TO")
    val `Zacapa`                                     = new ISOCountrySubdivision(ISOCountry.GUATEMALA, "Zacapa", "GT-ZA")
    val `Atlantida`                                  = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Atlantida", "HN-AT")
    val `Choluteca`                                  = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Choluteca", "HN-CH")
    val `Colon - Honduras`                           = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Colon", "HN-CL")
    val `Comayagua`                                  = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Comayagua", "HN-CM")
    val `Copan`                                      = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Copan", "HN-CP")
    val `Cortes`                                     = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Cortes", "HN-CR")
    val `El Paraiso`                                 = new ISOCountrySubdivision(ISOCountry.HONDURAS, "El Paraiso", "HN-EP")
    val `Francisco Morazan`                          = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Francisco Morazan", "HN-FM")
    val `Gracias a Dios`                             = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Gracias a Dios", "HN-GD")
    val `Intibuca`                                   = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Intibuca", "HN-IN")
    val `Islas de la Bahia`                          = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Islas de la Bahia", "HN-IB")
    val `La Paz - Honduras`                          = new ISOCountrySubdivision(ISOCountry.HONDURAS, "La Paz", "HN-LP")
    val `Lempira`                                    = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Lempira", "HN-LE")
    val `Ocotepeque`                                 = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Ocotepeque", "HN-OC")
    val `Olancho`                                    = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Olancho", "HN-OL")
    val `Santa Barbara`                              = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Santa Barbara", "HN-SB")
    val `Valle`                                      = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Valle", "HN-VA")
    val `Yoro`                                       = new ISOCountrySubdivision(ISOCountry.HONDURAS, "Yoro", "HN-YO")
    val `Artibonite`                                 = new ISOCountrySubdivision(ISOCountry.HAITI, "Artibonite", "HT-AR")
    val `Centre Haiti`                               = new ISOCountrySubdivision(ISOCountry.HAITI, "Centre", "HT-CE")
    val `Grand' Anse`                                = new ISOCountrySubdivision(ISOCountry.HAITI, "Grand' Anse", "HT-GA")
    val `Nippes`                                     = new ISOCountrySubdivision(ISOCountry.HAITI, "Nippes", "HT-NI")
    val `Nord Haiti`                                 = new ISOCountrySubdivision(ISOCountry.HAITI, "Nord", "HT-ND")
    val `Nord-Est Haiti`                             = new ISOCountrySubdivision(ISOCountry.HAITI, "Nord-Est", "HT-NE")
    val `Nord-Ouest Haiti`                           = new ISOCountrySubdivision(ISOCountry.HAITI, "Nord-Ouest", "HT-NO")
    val `Ouest Haiti`                                = new ISOCountrySubdivision(ISOCountry.HAITI, "Ouest", "HT-OU")
    val `Sud Haiti`                                  = new ISOCountrySubdivision(ISOCountry.HAITI, "Sud", "HT-SD")
    val `Sud-Est Haiti`                              = new ISOCountrySubdivision(ISOCountry.HAITI, "Sud-Est", "HT-SE")
    val `Clarendon`                                  = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Clarendon", "JM-13")
    val `Hanover`                                    = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Hanover", "JM-09")
    val `Kingston`                                   = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Kingston", "JM-01")
    val `Manchester`                                 = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Manchester", "JM-12")
    val `Portland`                                   = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Portland", "JM-04")
    val `Saint Andrew - Jamaica`                     = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Andrew", "JM-02")
    val `Saint Ann`                                  = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Ann", "JM-06")
    val `Saint Catherine`                            = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Catherine", "JM-14")
    val `Saint Elizabeth`                            = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Elizabeth", "JM-11")
    val `Saint James`                                = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint James", "JM-08")
    val `Saint Mary`                                 = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Mary", "JM-05")
    val `Saint Thomas`                               = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Saint Thomas", "JM-03")
    val `Trelawny`                                   = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Trelawny", "JM-07")
    val `Westmoreland`                               = new ISOCountrySubdivision(ISOCountry.JAMAICA, "Westmoreland", "JM-10")
    val `Saint George Basseterre`                    = new ISOCountrySubdivision(ISOCountry.SAINT_KITTS_AND_NEVIS, "Saint George Basseterre", "KN-03")
    val `Saint Paul Charlestown`                     = new ISOCountrySubdivision(ISOCountry.SAINT_KITTS_AND_NEVIS, "Saint Paul Charlestown", "KN-10")
    val `Anse la Raye`                               = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Anse la Raye", "LC-01")
    val `Castries`                                   = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Castries", "LC-02")
    val `Dennery`                                    = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Dennery", "LC-05")
    val `Gros Islet`                                 = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Gros Islet", "LC-06")
    val `Laborie`                                    = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Laborie", "LC-07")
    val `Micoud`                                     = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Micoud", "LC-08")
    val `Soufriere`                                  = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Soufriere", "LC-10")
    val `Vieux Fort`                                 = new ISOCountrySubdivision(ISOCountry.SAINT_LUCIA, "Vieux Fort", "LC-11")
    val `Aguascalientes`                             = new ISOCountrySubdivision(ISOCountry.MEXICO, "Aguascalientes", "MX-AGU")
    val `Baja California`                            = new ISOCountrySubdivision(ISOCountry.MEXICO, "Baja California", "MX-BCN")
    val `Baja California Sur`                        = new ISOCountrySubdivision(ISOCountry.MEXICO, "Baja California Sur", "MX-BCS")
    val `Campeche`                                   = new ISOCountrySubdivision(ISOCountry.MEXICO, "Campeche", "MX-CAM")
    val `Chiapas`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Chiapas", "MX-CHP")
    val `Chihuahua`                                  = new ISOCountrySubdivision(ISOCountry.MEXICO, "Chihuahua", "MX-CHH")
    val `Coahuila`                                   = new ISOCountrySubdivision(ISOCountry.MEXICO, "Coahuila", "MX-COA")
    val `Colima`                                     = new ISOCountrySubdivision(ISOCountry.MEXICO, "Colima", "MX-COL")
    val `Distrito Federal - Mexico`                  = new ISOCountrySubdivision(ISOCountry.MEXICO, "Distrito Federal", "MX-DIF")
    val `Durango`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Durango", "MX-DUR")
    val `Guanajuato`                                 = new ISOCountrySubdivision(ISOCountry.MEXICO, "Guanajuato", "MX-GUA")
    val `Guerrero`                                   = new ISOCountrySubdivision(ISOCountry.MEXICO, "Guerrero", "MX-GRO")
    val `Hidalgo`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Hidalgo", "MX-HID")
    val `Jalisco`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Jalisco", "MX-JAL")
    val `Mexico`                                     = new ISOCountrySubdivision(ISOCountry.MEXICO, "Mexico", "MX-MEX")
    val `Michoacan`                                  = new ISOCountrySubdivision(ISOCountry.MEXICO, "Michoacan", "MX-MIC")
    val `Morelos`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Morelos", "MX-MOR")
    val `Nayarit`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Nayarit", "MX-NAY")
    val `Nuevo Leon`                                 = new ISOCountrySubdivision(ISOCountry.MEXICO, "Nuevo Leon", "MX-NLE")
    val `Oaxaca`                                     = new ISOCountrySubdivision(ISOCountry.MEXICO, "Oaxaca", "MX-OAX")
    val `Puebla`                                     = new ISOCountrySubdivision(ISOCountry.MEXICO, "Puebla", "MX-PUE")
    val `Queretaro`                                  = new ISOCountrySubdivision(ISOCountry.MEXICO, "Queretaro", "MX-QUE")
    val `Quintana Roo`                               = new ISOCountrySubdivision(ISOCountry.MEXICO, "Quintana Roo", "MX-ROO")
    val `San Luis Potosi`                            = new ISOCountrySubdivision(ISOCountry.MEXICO, "San Luis Potosi", "MX-SLP")
    val `Sinaloa`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Sinaloa", "MX-SIN")
    val `Sonora`                                     = new ISOCountrySubdivision(ISOCountry.MEXICO, "Sonora", "MX-SON")
    val `Tabasco`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Tabasco", "MX-TAB")
    val `Tamaulipas`                                 = new ISOCountrySubdivision(ISOCountry.MEXICO, "Tamaulipas", "MX-TAM")
    val `Tlaxcala`                                   = new ISOCountrySubdivision(ISOCountry.MEXICO, "Tlaxcala", "MX-TLA")
    val `Veracruz`                                   = new ISOCountrySubdivision(ISOCountry.MEXICO, "Veracruz", "MX-VER")
    val `Yucatan`                                    = new ISOCountrySubdivision(ISOCountry.MEXICO, "Yucatan", "MX-YUC")
    val `Zacatecas`                                  = new ISOCountrySubdivision(ISOCountry.MEXICO, "Zacatecas", "MX-ZAC")
    val `Atlantico Norte`                            = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Atlantico Norte", "NI-AN")
    val `Atlantico Sur`                              = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Atlantico Sur", "NI-AS")
    val `Boaco`                                      = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Boaco", "NI-BO")
    val `Carazo`                                     = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Carazo", "NI-CA")
    val `Chinandega`                                 = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Chinandega", "NI-CI")
    val `Chontales`                                  = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Chontales", "NI-CO")
    val `Esteli`                                     = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Esteli", "NI-ES")
    val `Granada`                                    = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Granada", "NI-GR")
    val `Jinotega`                                   = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Jinotega", "NI-JI")
    val `Leon`                                       = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Leon", "NI-LE")
    val `Madriz`                                     = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Madriz", "NI-MD")
    val `Managua`                                    = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Managua", "NI-MN")
    val `Masaya`                                     = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Masaya", "NI-MS")
    val `Matagalpa`                                  = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Matagalpa", "NI-MT")
    val `Nueva Segovia`                              = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Nueva Segovia", "NI-NS")
    val `Rio San Juan`                               = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Rio San Juan", "NI-SJ")
    val `Rivas`                                      = new ISOCountrySubdivision(ISOCountry.NICARAGUA, "Rivas", "NI-RI")
    val `Bocas del Toro`                             = new ISOCountrySubdivision(ISOCountry.PANAMA, "Bocas del Toro", "PA-1")
    val `Chiriqui`                                   = new ISOCountrySubdivision(ISOCountry.PANAMA, "Chiriqui", "PA-4")
    val `Cocle`                                      = new ISOCountrySubdivision(ISOCountry.PANAMA, "Cocle", "PA-2")
    val `Colon`                                      = new ISOCountrySubdivision(ISOCountry.PANAMA, "Colon", "PA-3")
    val `Darien`                                     = new ISOCountrySubdivision(ISOCountry.PANAMA, "Darien", "PA-5")
    val `Herrera`                                    = new ISOCountrySubdivision(ISOCountry.PANAMA, "Herrera", "PA-6")
    val `Los Santos`                                 = new ISOCountrySubdivision(ISOCountry.PANAMA, "Los Santos", "PA-7")
    val `Panama`                                     = new ISOCountrySubdivision(ISOCountry.PANAMA, "Panama", "PA-8")
    val `San Blas`                                   = new ISOCountrySubdivision(ISOCountry.PANAMA, "San Blas", "PA-KY")
    val `Veraguas`                                   = new ISOCountrySubdivision(ISOCountry.PANAMA, "Veraguas", "PA-9")
    val `Ahuachapan`                                 = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Ahuachapan", "SV-AH")
    val `Cabanas`                                    = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Cabanas", "SV-CA")
    val `Chalatenango`                               = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Chalatenango", "SV-CH")
    val `Cuscatlan`                                  = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Cuscatlan", "SV-CU")
    val `La Libertad`                                = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "La Libertad", "SV-LI")
    val `La Paz`                                     = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "La Paz", "SV-PA")
    val `La Union`                                   = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "La Union", "SV-UN")
    val `Morazan`                                    = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Morazan", "SV-MO")
    val `San Miguel`                                 = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "San Miguel", "SV-SM")
    val `San Salvador`                               = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "San Salvador", "SV-SS")
    val `San Vicente`                                = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "San Vicente", "SV-SV")
    val `Santa Ana`                                  = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Santa Ana", "SV-SA")
    val `Sonsonate`                                  = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Sonsonate", "SV-SO")
    val `Usulutan`                                   = new ISOCountrySubdivision(ISOCountry.EL_SALVADOR, "Usulutan", "SV-US")
    val `Arima`                                      = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Arima", "TT-ARI")
    val `Caroni`                                     = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Caroni", "-")
    val `Mayaro`                                     = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Mayaro", "TT-MRC")
    val `Port-of-Spain`                              = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Port-of-Spain", "TT-POS")
    val `Saint Andrew - Trinidad and Tobago`         = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Saint Andrew", "DM-02")
    val `Saint George - Trinidad and Tobago`         = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Saint George", "DM-04")
    val `San Fernando`                               = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "San Fernando", "TT-SFO")
    val `Tobago`                                     = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Tobago", "TT-TOB")
    val `Trinidad and Tobago`                        = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Trinidad and Tobago", "TT-TOB")
    val `Victoria`                                   = new ISOCountrySubdivision(ISOCountry.TRINIDAD_AND_TOBAGO, "Victoria", "AU-VIC")
    val `Palmyra Atoll`                              = new ISOCountrySubdivision(ISOCountry.UNITED_STATES_MINOR_OUTLYING_ISLANDS, "Palmyra Atoll", "UM-95")
    val `Alabama`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Alabama", "US-AL")
    val `Alaska`                                     = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Alaska", "US-AK")
    val `Arizona`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Arizona", "US-AZ")
    val `Arkansas`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Arkansas", "US-AR")
    val `California`                                 = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "California", "US-CA")
    val `Colorado`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Colorado", "US-CO")
    val `Connecticut`                                = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Connecticut", "US-CT")
    val `Delaware`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Delaware", "US-DE")
    val `District Of Columbia`                       = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "District Of Columbia", "US-DC")
    val `Florida`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Florida", "US-FL")
    val `Georgia`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Georgia", "US-GA")
    val `Hawaii`                                     = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Hawaii", "US-HI")
    val `Idaho`                                      = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Idaho", "US-ID")
    val `Illinois`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Illinois", "US-IL")
    val `Indiana`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Indiana", "US-IN")
    val `Iowa`                                       = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Iowa", "US-IA")
    val `Kansas`                                     = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Kansas", "US-KS")
    val `Kentucky`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Kentucky", "US-KY")
    val `Louisiana`                                  = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Louisiana", "US-LA")
    val `Maine`                                      = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Maine", "US-ME")
    val `Maryland`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Maryland", "US-MD")
    val `Massachusetts`                              = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Massachusetts", "US-MA")
    val `Michigan`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Michigan", "US-MI")
    val `Minnesota`                                  = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Minnesota", "US-MN")
    val `Mississippi`                                = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Mississippi", "US-MS")
    val `Missouri`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Missouri", "US-MO")
    val `Montana`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Montana", "US-MT")
    val `Nebraska`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Nebraska", "US-NE")
    val `Nevada`                                     = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Nevada", "US-NV")
    val `New Hampshire`                              = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "New Hampshire", "US-NH")
    val `New Jersey`                                 = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "New Jersey", "US-NJ")
    val `New Mexico`                                 = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "New Mexico", "US-NM")
    val `New York`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "New York", "US-NY")
    val `North Carolina`                             = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "North Carolina", "US-NC")
    val `North Dakota`                               = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "North Dakota", "US-ND")
    val `Ohio`                                       = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Ohio", "US-OH")
    val `Oklahoma`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Oklahoma", "US-OK")
    val `Oregon`                                     = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Oregon", "US-OR")
    val `Pennsylvania`                               = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Pennsylvania", "US-PA")
    val `Rhode Island`                               = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Rhode Island", "US-RI")
    val `South Carolina`                             = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "South Carolina", "US-SC")
    val `South Dakota`                               = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "South Dakota", "US-SD")
    val `Tennessee`                                  = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Tennessee", "US-TN")
    val `Texas`                                      = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Texas", "US-TX")
    val `Utah`                                       = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Utah", "US-UT")
    val `Vermont`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Vermont", "US-VT")
    val `Virginia`                                   = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Virginia", "US-VA")
    val `Washington`                                 = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Washington", "US-WA")
    val `West Virginia`                              = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "West Virginia", "US-WV")
    val `Wisconsin`                                  = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Wisconsin", "US-WI")
    val `Wyoming`                                    = new ISOCountrySubdivision(ISOCountry.UNITED_STATES, "Wyoming", "US-WY")
    val `Charlotte`                                  = new ISOCountrySubdivision(ISOCountry.SAINT_VINCENT_AND_THE_GRENADINES, "Charlotte", "VC-01")
    val `Saint George`                               = new ISOCountrySubdivision(ISOCountry.SAINT_VINCENT_AND_THE_GRENADINES, "Saint George", "VC-04")
  // format: ON
}
object ISOCountrySubdivisionNorthAmerica extends ISOCountrySubdivisionNorthAmerica
